[0076] 最小覆盖子串
===================

-  https://leetcode-cn.com/problems/minimum-window-substring

题目描述
--------

.. raw:: html

   <p>

给你一个字符串 S、一个字符串 T，请在字符串 S 里面找出：包含 T
所有字母的最小子串。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入: S</strong> = &quot;ADOBECODEBANC&quot;, <strong>T</strong> = &quot;ABC&quot;
   <strong>输出:</strong> &quot;BANC&quot;</pre>

.. raw:: html

   <p>

说明：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>如果 S 中不存这样的子串，则返回空字符串 <code>&quot;&quot;</code>。</li>
    <li>如果 S 中存在这样的子串，我们保证它是唯一的答案。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

哈希表

.. raw:: html

   </li>

.. raw:: html

   <li>

双指针

.. raw:: html

   </li>

.. raw:: html

   <li>

字符串

.. raw:: html

   </li>

.. raw:: html

   <li>

Sliding Window

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        string minWindow(string s, string t) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
