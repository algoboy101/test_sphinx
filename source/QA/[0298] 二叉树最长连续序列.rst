[0298] 二叉树最长连续序列
=========================

-  https://leetcode-cn.com/problems/binary-tree-longest-consecutive-sequence

题目描述
--------

.. raw:: html

   <p>

给你一棵指定的二叉树，请你计算它最长连续序列路径的长度。

.. raw:: html

   </p>

.. raw:: html

   <p>

该路径，可以是从某个初始结点到树中任意结点，通过「父 -
子」关系连接而产生的任意路径。

.. raw:: html

   </p>

.. raw:: html

   <p>

这个最长连续的路径，必须从父结点到子结点，反过来是不可以的。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>

      1
       \
        3
       / \
      2   4
           \
            5

   <strong>输出:</strong> <code>3</code>

   <strong>解析: </strong>当中，最长连续序列是 <code>3-4-5，所以</code>返回结果为 <code>3</code></pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:

   </strong>   2
       \
        3
       / 
      2    
     / 
    1

   <strong>输出: 2 

   解析: </strong>当中，最长连续序列是 <code>2-3。注意，不是</code> <code>3-2-1，所以</code>返回 <code>2。</code></pre>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        int longestConsecutive(TreeNode* root) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
