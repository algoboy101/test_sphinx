[0988] 从叶结点开始的最小字符串
===============================

-  https://leetcode-cn.com/problems/smallest-string-starting-from-leaf

题目描述
--------

.. raw:: html

   <p>

给定一颗根结点为 root 的二叉树，书中的每个结点都有一个从 0
到 25 的值，分别代表字母 'a' 到 'z'：值 0
代表 'a'，值 1 代表 'b'，依此类推。

.. raw:: html

   </p>

.. raw:: html

   <p>

找出按字典序最小的字符串，该字符串从这棵树的一个叶结点开始，到根结点结束。

.. raw:: html

   </p>

.. raw:: html

   <p>

（小贴士：字符串中任何较短的前缀在字典序上都是较小的：例如，在字典序上 "ab"
比 "aba" 要小。叶结点是指没有子结点的结点。）

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <ol>

.. raw:: html

   </ol>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[0,1,2,3,4,3,4]
   <strong>输出：</strong>&quot;dba&quot;
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[25,1,3,1,3,0,2]
   <strong>输出：</strong>&quot;adz&quot;
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[2,2,1,null,1,0,null,0]
   <strong>输出：</strong>&quot;abc&quot;
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>给定树的结点数介于&nbsp;<code>1</code> 和&nbsp;<code>8500</code>&nbsp;之间。</li>
    <li>树中的每个结点都有一个介于&nbsp;<code>0</code>&nbsp;和&nbsp;<code>25</code>&nbsp;之间的值。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        string smallestFromLeaf(TreeNode* root) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
