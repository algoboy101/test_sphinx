[0783] 二叉搜索树结点最小距离
=============================

-  https://leetcode-cn.com/problems/minimum-distance-between-bst-nodes

题目描述
--------

.. raw:: html

   <p>

给定一个二叉搜索树的根结点 root, 返回树中任意两节点的差的最小值。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入:</strong> root = [4,2,6,1,3,null,null]
   <strong>输出:</strong> 1
   <strong>解释:</strong>
   注意，root是树结点对象(TreeNode object)，而不是数组。

   给定的树 [4,2,6,1,3,null,null] 可表示为下图:

             4
           /   \
         2      6
        / \    
       1   3  

   最小的差值是 1, 它是节点1和节点2的差值, 也是节点3和节点2的差值。</pre>

.. raw:: html

   <p>

注意：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>二叉树的大小范围在 <code>2</code> 到&nbsp;<code>100</code>。</li>
    <li>二叉树总是有效的，每个节点的值都是整数，且不重复。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   <li>

递归

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        int minDiffInBST(TreeNode* root) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
