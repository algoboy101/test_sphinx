[1291] 顺次数
=============

-  https://leetcode-cn.com/problems/sequential-digits

题目描述
--------

.. raw:: html

   <p>

我们定义「顺次数」为：每一位上的数字都比前一位上的数字大 1 的整数。

.. raw:: html

   </p>

.. raw:: html

   <p>

请你返回由 [low, high] 范围内所有顺次数组成的 有序
列表（从小到大排序）。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输出：</strong>low = 100, high = 300
   <strong>输出：</strong>[123,234]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输出：</strong>low = 1000, high = 13000
   <strong>输出：</strong>[1234,2345,3456,4567,5678,6789,12345]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>10 &lt;= low &lt;= high &lt;= 10^9</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

回溯算法

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<int> sequentialDigits(int low, int high) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
