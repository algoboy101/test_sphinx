[0230] 二叉搜索树中第K小的元素
==============================

-  https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst

题目描述
--------

.. raw:: html

   <p>

给定一个二叉搜索树，编写一个函数 kthSmallest 来查找其中第 k 个最小的元素。

.. raw:: html

   </p>

.. raw:: html

   <p>

说明： 你可以假设 k 总是有效的，1 ≤ k ≤ 二叉搜索树元素个数。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> root = [3,1,4,null,2], k = 1
      3
     / \
    1   4
     \
   &nbsp;  2
   <strong>输出:</strong> 1</pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> root = [5,3,6,2,4,null,null,1], k = 3
          5
         / \
        3   6
       / \
      2   4
     /
    1
   <strong>输出:</strong> 3</pre>

.. raw:: html

   <p>

进阶： 如果二叉搜索树经常被修改（插入/删除操作）并且你需要频繁地查找第 k
小的值，你将如何优化 kthSmallest 函数？

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   <li>

二分查找

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        int kthSmallest(TreeNode* root, int k) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
