[0278] 第一个错误的版本
=======================

-  https://leetcode-cn.com/problems/first-bad-version

题目描述
--------

.. raw:: html

   <p>

你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。

.. raw:: html

   </p>

.. raw:: html

   <p>

假设你有 n 个版本 [1, 2, ...,
n]，你想找出导致之后所有版本出错的第一个错误的版本。

.. raw:: html

   </p>

.. raw:: html

   <p>

你可以通过调用 bool isBadVersion(version) 接口来判断版本号 version
是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用
API 的次数。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例:

.. raw:: html

   </p>

.. raw:: html

   <pre>给定 n = 5，并且 version = 4 是第一个错误的版本。

   <code>调用 isBadVersion(3) -&gt; false
   调用 isBadVersion(5)&nbsp;-&gt; true
   调用 isBadVersion(4)&nbsp;-&gt; true

   所以，4 是第一个错误的版本。&nbsp;</code></pre>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

二分查找

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    // Forward declaration of isBadVersion API.
    bool isBadVersion(int version);

    class Solution {
    public:
        int firstBadVersion(int n) {
            
        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
