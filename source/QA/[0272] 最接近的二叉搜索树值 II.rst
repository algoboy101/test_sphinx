[0272] 最接近的二叉搜索树值 II
==============================

-  https://leetcode-cn.com/problems/closest-binary-search-tree-value-ii

题目描述
--------

.. raw:: html

   <p>

给定一个不为空的二叉搜索树和一个目标值
target，请在该二叉搜索树中找到最接近目标值 target 的 k 个值。

.. raw:: html

   </p>

.. raw:: html

   <p>

注意：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>给定的目标值 target 是一个浮点数</li>
    <li>你可以默认 k 值永远是有效的，即 k &le; 总结点数</li>
    <li>题目保证该二叉搜索树中只会存在一种&nbsp;k 个值集合最接近目标值</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> root = [4,2,5,1,3]，目标值 = 3.714286，且 <em>k</em> = 2

       4
      / \
     2   5
    / \
   1   3

   <strong>输出:</strong> [4,3]</pre>

.. raw:: html

   <p>

拓展： 假设该二叉搜索树是平衡的，请问您是否能在小于 O(n)（n
为总结点数）的时间复杂度内解决该问题呢？

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

栈

.. raw:: html

   </li>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        vector<int> closestKValues(TreeNode* root, double target, int k) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
