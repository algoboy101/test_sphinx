[0841] 钥匙和房间
=================

-  https://leetcode-cn.com/problems/keys-and-rooms

题目描述
--------

.. raw:: html

   <p>

有 N 个房间，开始时你位于 0
号房间。每个房间有不同的号码：0，1，2，...，N-1，并且房间里可能有一些钥匙能使你进入下一个房间。

.. raw:: html

   </p>

.. raw:: html

   <p>

在形式上，对于每个房间 i 都有一个钥匙列表 rooms[i]，每个钥匙 rooms[i][j]
由 [0,1，...，N-1] 中的一个整数表示，其中 N = rooms.length。 钥匙
rooms[i][j] = v 可以打开编号为 v 的房间。

.. raw:: html

   </p>

.. raw:: html

   <p>

最初，除 0 号房间外的其余所有房间都被锁住。

.. raw:: html

   </p>

.. raw:: html

   <p>

你可以自由地在房间之间来回走动。

.. raw:: html

   </p>

.. raw:: html

   <p>

如果能进入每个房间返回 true，否则返回 false。

.. raw:: html

   </p>

.. raw:: html

   <ol>

.. raw:: html

   </ol>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入: </strong>[[1],[2],[3],[]]
   <strong>输出: </strong>true
   <strong>解释:  </strong>
   我们从 0 号房间开始，拿到钥匙 1。
   之后我们去 1 号房间，拿到钥匙 2。
   然后我们去 2 号房间，拿到钥匙 3。
   最后我们去了 3 号房间。
   由于我们能够进入每个房间，我们返回 true。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[1,3],[3,0,1],[2],[0]]
   <strong>输出：</strong>false
   <strong>解释：</strong>我们不能进入 2 号房间。
   </pre>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= rooms.length &lt;=&nbsp;1000</code></li>
    <li><code>0 &lt;= rooms[i].length &lt;= 1000</code></li>
    <li>所有房间中的钥匙数量总计不超过&nbsp;<code>3000</code>。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

图

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        bool canVisitAllRooms(vector<vector<int>>& rooms) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
