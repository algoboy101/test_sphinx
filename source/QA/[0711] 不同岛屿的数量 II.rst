[0711] 不同岛屿的数量 II
========================

-  https://leetcode-cn.com/problems/number-of-distinct-islands-ii

题目描述
--------

.. raw:: html

   <p>

给定一个非空01二维数组表示的网格，一个岛屿由四连通（上、下、左、右四个方向）的
1 组成，你可以认为网格的四周被海水包围。

.. raw:: html

   </p>

.. raw:: html

   <p>

请你计算这个网格中共有多少个形状不同的岛屿。如果两个岛屿的形状相同，或者通过旋转（顺时针旋转
90°，180°，270°）、翻转（左右翻转、上下翻转）后形状相同，那么就认为这两个岛屿是相同的。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

样例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre>11000
   10000
   00001
   00011
   </pre>

.. raw:: html

   <p>

给定上图，返回结果 1。 注意 ：

.. raw:: html

   </p>

.. raw:: html

   <pre>11
   1
   </pre>

.. raw:: html

   <p>

和

.. raw:: html

   </p>

.. raw:: html

   <pre> 1
   11</pre>

.. raw:: html

   <p>

是相同的岛屿。因为我们通过 180° 旋转第一个岛屿，两个岛屿的形状相同。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

样例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre>11100
   10001
   01001
   01110</pre>

.. raw:: html

   <p>

给定上图，返回结果 2。 下面是两个不同的岛屿：

.. raw:: html

   </p>

.. raw:: html

   <pre>111
   1</pre>

.. raw:: html

   <p>

和

.. raw:: html

   </p>

.. raw:: html

   <pre>1
   1
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

注意 ：

.. raw:: html

   </p>

.. raw:: html

   <pre>111
   1</pre>

.. raw:: html

   <p>

和

.. raw:: html

   </p>

.. raw:: html

   <pre>1
   111
   </pre>

.. raw:: html

   <p>

相同的岛屿。因为我们通过上下翻转第一个岛屿，两个岛屿的形状相同。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

注释 :  二维数组每维的大小都不会超过50。

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

哈希表

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int numDistinctIslands2(vector<vector<int>>& grid) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
