[0855] 考场就座
===============

-  https://leetcode-cn.com/problems/exam-room

题目描述
--------

.. raw:: html

   <p>

在考场里，一排有 N 个座位，分别编号为 0, 1, 2, ..., N-1 。

.. raw:: html

   </p>

.. raw:: html

   <p>

当学生进入考场后，他必须坐在能够使他与离他最近的人之间的距离达到最大化的座位上。如果有多个这样的座位，他会坐在编号最小的座位上。(另外，如果考场里没有人，那么学生就坐在
0 号座位上。)

.. raw:: html

   </p>

.. raw:: html

   <p>

返回 ExamRoom(int
N) 类，它有两个公开的函数：其中，函数 ExamRoom.seat() 会返回一个 int （整型数据），代表学生坐的位置；函数 ExamRoom.leave(int
p) 代表坐在座位 p
上的学生现在离开了考场。每次调用 ExamRoom.leave(p) 时都保证有学生坐在座位 p 上。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[&quot;ExamRoom&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;leave&quot;,&quot;seat&quot;], [[10],[],[],[],[],[4],[]]
   <strong>输出：</strong>[null,0,9,4,2,null,5]
   <strong>解释：</strong>
   ExamRoom(10) -&gt; null
   seat() -&gt; 0，没有人在考场里，那么学生坐在 0 号座位上。
   seat() -&gt; 9，学生最后坐在 9 号座位上。
   seat() -&gt; 4，学生最后坐在 4 号座位上。
   seat() -&gt; 2，学生最后坐在 2 号座位上。
   leave(4) -&gt; null
   seat() -&gt; 5，学生最后坐在 5 号座位上。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= N &lt;= 10^9</code></li>
    <li>在所有的测试样例中&nbsp;<code>ExamRoom.seat()</code>&nbsp;和&nbsp;<code>ExamRoom.leave()</code>&nbsp;最多被调用&nbsp;<code>10^4</code>&nbsp;次。</li>
    <li>保证在调用&nbsp;<code>ExamRoom.leave(p)</code>&nbsp;时有学生正坐在座位 <code>p</code> 上。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

Ordered Map

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class ExamRoom {
    public:
        ExamRoom(int N) {

        }
        
        int seat() {

        }
        
        void leave(int p) {

        }
    };

    /**
     * Your ExamRoom object will be instantiated and called as such:
     * ExamRoom* obj = new ExamRoom(N);
     * int param_1 = obj->seat();
     * obj->leave(p);
     */

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
