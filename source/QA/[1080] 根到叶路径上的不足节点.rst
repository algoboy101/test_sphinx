[1080] 根到叶路径上的不足节点
=============================

-  https://leetcode-cn.com/problems/insufficient-nodes-in-root-to-leaf-paths

题目描述
--------

.. raw:: html

   <p>

给定一棵二叉树的根
root，请你考虑它所有 从根到叶的路径：从根到任何叶的路径。（所谓一个叶子节点，就是一个没有子节点的节点）

.. raw:: html

   </p>

.. raw:: html

   <p>

假如通过节点 node 的每种可能的 “根-叶” 路径上值的总和全都小于给定的
limit，则该节点被称之为「不足节点」，需要被删除。

.. raw:: html

   </p>

.. raw:: html

   <p>

请你删除所有不足节点，并返回生成的二叉树的根。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong><img alt="" src="https://raw.githubusercontent.com/algoboy101/LeetCodeCrowdsource/master/imgs/insufficient-1.png" style="height: 200px; width: 482px;">
   输入：</strong>root = [1,2,3,4,-99,-99,7,8,9,-99,-99,12,13,-99,14], limit = 1
   <strong><img alt="" src="https://raw.githubusercontent.com/algoboy101/LeetCodeCrowdsource/master/imgs/insufficient-2.png" style="height: 200px; width: 258px;">
   输出：</strong>[1,2,3,4,null,null,7,8,9,null,14]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong><img alt="" src="https://raw.githubusercontent.com/algoboy101/LeetCodeCrowdsource/master/imgs/insufficient-3.png" style="height: 200px; width: 292px;">
   输入：</strong>root = [5,4,8,11,null,17,4,7,1,null,null,5,3], limit = 22
   <strong><img alt="" src="https://raw.githubusercontent.com/algoboy101/LeetCodeCrowdsource/master/imgs/insufficient-4.png" style="height: 200px; width: 264px;">
   输出：</strong>[5,4,8,11,null,17,4,7,null,null,null,5]</pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong><img alt="" src="https://raw.githubusercontent.com/algoboy101/LeetCodeCrowdsource/master/imgs/insufficient-5.png" style="height: 100px; width: 140px;">
   输入：</strong>root = [5,-6,-6], limit = 0<strong>
   输出：</strong>[]</pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>给定的树有&nbsp;<code>1</code>&nbsp;到&nbsp;<code>5000</code>&nbsp;个节点</li>
    <li><code>-10^5&nbsp;&lt;= node.val &lt;= 10^5</code></li>
    <li><code>-10^9 &lt;= limit&nbsp;&lt;= 10^9</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        TreeNode* sufficientSubset(TreeNode* root, int limit) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
