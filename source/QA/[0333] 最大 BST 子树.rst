[0333] 最大 BST 子树
====================

-  https://leetcode-cn.com/problems/largest-bst-subtree

题目描述
--------

.. raw:: html

   <p>

给定一个二叉树，找到其中最大的二叉搜索树（BST）子树，其中最大指的是子树节点数最多的。

.. raw:: html

   </p>

.. raw:: html

   <p>

注意: 子树必须包含其所有后代。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入: </strong>[10,5,15,1,8,null,7]

      10 
      / \ 
   <font color="red">  5</font>  15 
   <font color="red"> / \</font>   \ 
   <font color="red">1   8</font>   7

   <strong>输出:</strong> 3
   <strong>解释: </strong>高亮部分为最大的 BST 子树。
        返回值 3 在这个样例中为子树大小。
   </pre>

.. raw:: html

   <p>

进阶: 你能想出用 O(n) 的时间复杂度解决这个问题吗？

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        int largestBSTSubtree(TreeNode* root) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
