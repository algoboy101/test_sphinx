[1253] 重构 2 行二进制矩阵
==========================

-  https://leetcode-cn.com/problems/reconstruct-a-2-row-binary-matrix

题目描述
--------

.. raw:: html

   <p>

给你一个 2 行 n 列的二进制数组：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>矩阵是一个二进制矩阵，这意味着矩阵中的每个元素不是&nbsp;<code>0</code>&nbsp;就是&nbsp;<code>1</code>。</li>
    <li>第 <code>0</code> 行的元素之和为&nbsp;<code>upper</code>。</li>
    <li>第 <code>1</code> 行的元素之和为 <code>lower</code>。</li>
    <li>第 <code>i</code> 列（从 <code>0</code> 开始编号）的元素之和为&nbsp;<code>colsum[i]</code>，<code>colsum</code>&nbsp;是一个长度为&nbsp;<code>n</code>&nbsp;的整数数组。</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

你需要利用 upper，lower 和 colsum 来重构这个矩阵，并以二维整数数组的形式返回它。

.. raw:: html

   </p>

.. raw:: html

   <p>

如果有多个不同的答案，那么任意一个都可以通过本题。

.. raw:: html

   </p>

.. raw:: html

   <p>

如果不存在符合要求的答案，就请返回一个空的二维数组。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>upper = 2, lower = 1, colsum = [1,1,1]
   <strong>输出：</strong>[[1,1,0],[0,0,1]]
   <strong>解释：</strong>[[1,0,1],[0,1,0]] 和 [[0,1,1],[1,0,0]] 也是正确答案。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>upper = 2, lower = 3, colsum = [2,2,1,1]
   <strong>输出：</strong>[]
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>upper = 5, lower = 5, colsum = [2,1,2,0,1,0,1,2,0,1]
   <strong>输出：</strong>[[1,1,1,0,1,0,0,1,0,0],[1,0,1,0,0,0,1,1,0,1]]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= colsum.length &lt;= 10^5</code></li>
    <li><code>0 &lt;= upper, lower &lt;= colsum.length</code></li>
    <li><code>0 &lt;= colsum[i] &lt;= 2</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

贪心算法

.. raw:: html

   </li>

.. raw:: html

   <li>

数学

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<vector<int>> reconstructMatrix(int upper, int lower, vector<int>& colsum) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
