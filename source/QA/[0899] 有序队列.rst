[0899] 有序队列
===============

-  https://leetcode-cn.com/problems/orderly-queue

题目描述
--------

.. raw:: html

   <p>

给出了一个由小写字母组成的字符串 S。然后，我们可以进行任意次数的移动。

.. raw:: html

   </p>

.. raw:: html

   <p>

在每次移动中，我们选择前 K
个字母中的一个（从左侧开始），将其从原位置移除，并放置在字符串的末尾。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回我们在任意次数的移动之后可以拥有的按字典顺序排列的最小字符串。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>S = &quot;cba&quot;, K = 1
   <strong>输出：</strong>&quot;acb&quot;
   <strong>解释：</strong>
   在第一步中，我们将第一个字符（&ldquo;c&rdquo;）移动到最后，获得字符串 &ldquo;bac&rdquo;。
   在第二步中，我们将第一个字符（&ldquo;b&rdquo;）移动到最后，获得最终结果 &ldquo;acb&rdquo;。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>S = &quot;baaca&quot;, K = 3
   <strong>输出：</strong>&quot;aaabc&quot;
   <strong>解释：
   </strong>在第一步中，我们将第一个字符（&ldquo;b&rdquo;）移动到最后，获得字符串 &ldquo;aacab&rdquo;。
   在第二步中，我们将第三个字符（&ldquo;c&rdquo;）移动到最后，获得最终结果 &ldquo;aaabc&rdquo;。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= K &lt;= S.length&nbsp;&lt;= 1000</code></li>
    <li><code>S</code>&nbsp;只由小写字母组成。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

数学

.. raw:: html

   </li>

.. raw:: html

   <li>

字符串

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        string orderlyQueue(string S, int K) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
