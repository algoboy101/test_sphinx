[0766] 托普利茨矩阵
===================

-  https://leetcode-cn.com/problems/toeplitz-matrix

题目描述
--------

.. raw:: html

   <p>

如果一个矩阵的每一方向由左上到右下的对角线上具有相同元素，那么这个矩阵是托普利茨矩阵。

.. raw:: html

   </p>

.. raw:: html

   <p>

给定一个 M x N 的矩阵，当且仅当它是托普利茨矩阵时返回 True。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> 
   matrix = [
   &nbsp; [1,2,3,4],
   &nbsp; [5,1,2,3],
   &nbsp; [9,5,1,2]
   ]
   <strong>输出:</strong> True
   <strong>解释:</strong>
   在上述矩阵中, 其对角线为:
   &quot;[9]&quot;, &quot;[5, 5]&quot;, &quot;[1, 1, 1]&quot;, &quot;[2, 2, 2]&quot;, &quot;[3, 3]&quot;, &quot;[4]&quot;。
   各条对角线上的所有元素均相同, 因此答案是True。
   </pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   matrix = [
   &nbsp; [1,2],
   &nbsp; [2,2]
   ]
   <strong>输出:</strong> False
   <strong>解释: 
   </strong>对角线&quot;[1, 2]&quot;上的元素不同。
   </pre>

.. raw:: html

   <p>

说明:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>&nbsp;<code>matrix</code>&nbsp;是一个包含整数的二维数组。</li>
    <li><code>matrix</code>&nbsp;的行数和列数均在&nbsp;<code>[1, 20]</code>范围内。</li>
    <li><code>matrix[i][j]</code>&nbsp;包含的整数在&nbsp;<code>[0, 99]</code>范围内。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

进阶:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>如果矩阵存储在磁盘上，并且磁盘内存是有限的，因此一次最多只能将一行矩阵加载到内存中，该怎么办？</li>
    <li>如果矩阵太大以至于只能一次将部分行加载到内存中，该怎么办？</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

数组

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        bool isToeplitzMatrix(vector<vector<int>>& matrix) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
