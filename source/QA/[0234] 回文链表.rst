[0234] 回文链表
===============

-  https://leetcode-cn.com/problems/palindrome-linked-list

题目描述
--------

.. raw:: html

   <p>

请判断一个链表是否为回文链表。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> 1-&gt;2
   <strong>输出:</strong> false</pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> 1-&gt;2-&gt;2-&gt;1
   <strong>输出:</strong> true
   </pre>

.. raw:: html

   <p>

进阶： 你能否用 O(n) 时间复杂度和 O(1) 空间复杂度解决此题？

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

链表

.. raw:: html

   </li>

.. raw:: html

   <li>

双指针

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for singly-linked list.
     * struct ListNode {
     *     int val;
     *     ListNode *next;
     *     ListNode(int x) : val(x), next(NULL) {}
     * };
     */
    class Solution {
    public:
        bool isPalindrome(ListNode* head) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
