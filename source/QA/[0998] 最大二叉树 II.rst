[0998] 最大二叉树 II
====================

-  https://leetcode-cn.com/problems/maximum-binary-tree-ii

题目描述
--------

.. raw:: html

   <p>

最大树定义：一个树，其中每个节点的值都大于其子树中的任何其他值。

.. raw:: html

   </p>

.. raw:: html

   <p>

给出最大树的根节点 root。

.. raw:: html

   </p>

.. raw:: html

   <p>

就像之前的问题那样，给定的树是从表 A（root =
Construct(A)）递归地使用下述 Construct(A) 例程构造的：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>如果&nbsp;<code>A</code>&nbsp;为空，返回&nbsp;<code>null</code></li>
    <li>否则，令&nbsp;<code>A[i]</code>&nbsp;作为 A 的最大元素。创建一个值为&nbsp;<code>A[i]</code>&nbsp;的根节点 <code>root</code></li>
    <li><code>root</code>&nbsp;的左子树将被构建为&nbsp;<code>Construct([A[0], A[1], ..., A[i-1]])</code></li>
    <li><code>root</code>&nbsp;的右子树将被构建为 <code>Construct([A[i+1], A[i+2], ..., A[A.length - 1]])</code></li>
    <li>返回&nbsp;<code>root</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

请注意，我们没有直接给定 A，只有一个根节点 root = Construct(A).

.. raw:: html

   </p>

.. raw:: html

   <p>

假设 B 是 A 的副本，并附加值 val。保证 B 中的值是不同的。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回 Construct(B)。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root = [4,1,3,null,null,2], val = 5
   <strong>输出：</strong>[5,4,null,1,3,null,null,2]
   <strong>解释：</strong>A = [1,4,2,3], B = [1,4,2,3,5]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root = [5,2,4,null,1], val = 3
   <strong>输出：</strong>[5,2,4,null,1,null,3]
   <strong>解释：</strong>A = [2,1,5,4], B = [2,1,5,4,3]
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root = [5,2,3,null,1], val = 4
   <strong>输出：</strong>[5,2,4,null,1,3]
   <strong>解释：</strong>A = [2,1,5,3], B = [2,1,5,3,4]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= B.length &lt;= 100</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        TreeNode* insertIntoMaxTree(TreeNode* root, int val) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
