[1340] 跳跃游戏 V
=================

-  https://leetcode-cn.com/problems/jump-game-v

题目描述
--------

.. raw:: html

   <p>

给你一个整数数组 arr 和一个整数 d 。每一步你可以从下标 i 跳到：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>i + x</code>&nbsp;，其中&nbsp;<code>i + x &lt; arr.length</code>&nbsp;且&nbsp;<code>0 &lt; x &lt;= d</code>&nbsp;。</li>
    <li><code>i - x</code>&nbsp;，其中&nbsp;<code>i - x &gt;= 0</code>&nbsp;且&nbsp;<code>0 &lt; x &lt;= d</code>&nbsp;。</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

除此以外，你从下标 i 跳到下标 j 需要满足：arr[i] > arr[j] 且 arr[i] >
arr[k] ，其中下标 k 是所有 i 到 j 之间的数字（更正式的，min(i, j) < k <
max(i, j)）。

.. raw:: html

   </p>

.. raw:: html

   <p>

你可以选择数组的任意下标开始跳跃。请你返回你 最多 可以访问多少个下标。

.. raw:: html

   </p>

.. raw:: html

   <p>

请注意，任何时刻你都不能跳到数组的外面。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>arr = [6,4,14,6,8,13,9,7,10,6,12], d = 2
   <strong>输出：</strong>4
   <strong>解释：</strong>你可以从下标 10 出发，然后如上图依次经过 10 --&gt; 8 --&gt; 6 --&gt; 7 。
   注意，如果你从下标 6 开始，你只能跳到下标 7 处。你不能跳到下标 5 处因为 13 &gt; 9 。你也不能跳到下标 4 处，因为下标 5 在下标 4 和 6 之间且 13 &gt; 9 。
   类似的，你不能从下标 3 处跳到下标 2 或者下标 1 处。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>arr = [3,3,3,3,3], d = 3
   <strong>输出：</strong>1
   <strong>解释：</strong>你可以从任意下标处开始且你永远无法跳到任何其他坐标。
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>arr = [7,6,5,4,3,2,1], d = 1
   <strong>输出：</strong>7
   <strong>解释：</strong>从下标 0 处开始，你可以按照数值从大到小，访问所有的下标。
   </pre>

.. raw:: html

   <p>

示例 4：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>arr = [7,1,7,1,7,1], d = 2
   <strong>输出：</strong>2
   </pre>

.. raw:: html

   <p>

示例 5：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>arr = [66], d = 1
   <strong>输出：</strong>1
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= arr.length &lt;= 1000</code></li>
    <li><code>1 &lt;= arr[i] &lt;= 10^5</code></li>
    <li><code>1 &lt;= d &lt;= arr.length</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int maxJumps(vector<int>& arr, int d) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
