[0533] 孤独像素 II
==================

-  https://leetcode-cn.com/problems/lonely-pixel-ii

题目描述
--------

.. raw:: html

   <p>

给定一幅由黑色像素和白色像素组成的图像， 与一个正整数N,
找到位于某行 R 和某列 C 中且符合下列规则的黑色像素的数量:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>行R 和列C都恰好包括N个黑色像素。</li>
    <li>列C中所有黑色像素所在的行必须和行R完全相同。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

图像由一个由‘B’和‘W’组成二维字符数组表示,
‘B’和‘W’分别代表黑色像素和白色像素。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>                                            
   [[&#39;W&#39;, &#39;B&#39;, &#39;W&#39;, &#39;B&#39;, &#39;B&#39;, &#39;W&#39;],    
    [&#39;W&#39;, &#39;B&#39;, &#39;W&#39;, &#39;B&#39;, &#39;B&#39;, &#39;W&#39;],    
    [&#39;W&#39;, &#39;B&#39;, &#39;W&#39;, &#39;B&#39;, &#39;B&#39;, &#39;W&#39;],    
    [&#39;W&#39;, &#39;W&#39;, &#39;B&#39;, &#39;W&#39;, &#39;B&#39;, &#39;W&#39;]] 

   N = 3
   <strong>输出:</strong> 6
   <strong>解析:</strong> 所有粗体的&#39;B&#39;都是我们所求的像素(第1列和第3列的所有&#39;B&#39;).
           0    1    2    3    4    5         列号                                          
   0    [[&#39;W&#39;, <strong>&#39;B&#39;</strong>, &#39;W&#39;, <strong>&#39;B&#39;</strong>, &#39;B&#39;, &#39;W&#39;],    
   1     [&#39;W&#39;, <strong>&#39;B&#39;</strong>, &#39;W&#39;, <strong>&#39;B&#39;</strong>, &#39;B&#39;, &#39;W&#39;],    
   2     [&#39;W&#39;, <strong>&#39;B&#39;</strong>, &#39;W&#39;, <strong>&#39;B&#39;</strong>, &#39;B&#39;, &#39;W&#39;],    
   3     [&#39;W&#39;, &#39;W&#39;, &#39;B&#39;, &#39;W&#39;, &#39;B&#39;, &#39;W&#39;]]    
   行号

   以R = 0行和C = 1列的&#39;B&#39;为例:
   规则 1，R = 0行和C = 1列都恰好有N = 3个黑色像素. 
   规则 2，在C = 1列的黑色像素分别位于0，1和2行。它们都和R = 0行完全相同。

   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

注意:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>输入二维数组行和列的范围是 [1,200]。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

数组

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int findBlackPixel(vector<vector<char>>& picture, int N) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
