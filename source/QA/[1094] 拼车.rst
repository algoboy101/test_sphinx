[1094] 拼车
===========

-  https://leetcode-cn.com/problems/car-pooling

题目描述
--------

.. raw:: html

   <p>

假设你是一位顺风车司机，车上最初有 capacity 个空座位可以用来载客。由于道路的限制，车 只能 向一个方向行驶（也就是说，不允许掉头或改变方向，你可以将其想象为一个向量）。

.. raw:: html

   </p>

.. raw:: html

   <p>

这儿有一份行程计划表 trips[][]，其中 trips[i] = [num\_passengers,
start\_location, end\_location] 包含了你的第 i 次行程信息：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>必须接送的乘客数量；</li>
    <li>乘客的上车地点；</li>
    <li>以及乘客的下车地点。</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

这些给出的地点位置是从你的 初始 出发位置向前行驶到这些地点所需的距离（它们一定在你的行驶方向上）。

.. raw:: html

   </p>

.. raw:: html

   <p>

请你根据给出的行程计划表和车子的座位数，来判断你的车是否可以顺利完成接送所用乘客的任务（当且仅当你可以在所有给定的行程中接送所有乘客时，返回 true，否则请返回
false）。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>trips = [[2,1,5],[3,3,7]], capacity = 4
   <strong>输出：</strong>false
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>trips = [[2,1,5],[3,3,7]], capacity = 5
   <strong>输出：</strong>true
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>trips = [[2,1,5],[3,5,7]], capacity = 3
   <strong>输出：</strong>true
   </pre>

.. raw:: html

   <p>

示例 4：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>trips = [[3,2,7],[3,7,9],[8,3,9]], capacity = 11
   <strong>输出：</strong>true
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>你可以假设乘客会自觉遵守 &ldquo;<strong>先下后上</strong>&rdquo; 的良好素质</li>
    <li><code>trips.length &lt;= 1000</code></li>
    <li><code>trips[i].length == 3</code></li>
    <li><code>1 &lt;= trips[i][0] &lt;= 100</code></li>
    <li><code>0 &lt;= trips[i][1] &lt; trips[i][2] &lt;= 1000</code></li>
    <li><code>1 &lt;=&nbsp;capacity &lt;= 100000</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

贪心算法

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        bool carPooling(vector<vector<int>>& trips, int capacity) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
