[1337] 方阵中战斗力最弱的 K 行
==============================

-  https://leetcode-cn.com/problems/the-k-weakest-rows-in-a-matrix

题目描述
--------

.. raw:: html

   <p>

给你一个大小为 m \* n 的方阵 mat，方阵由若干军人和平民组成，分别用 0 和
1 表示。

.. raw:: html

   </p>

.. raw:: html

   <p>

请你返回方阵中战斗力最弱的 k 行的索引，按从最弱到最强排序。

.. raw:: html

   </p>

.. raw:: html

   <p>

如果第 i 行的军人数量少于第 j 行，或者两行军人数量相同但 i 小于
j，那么我们认为第 i 行的战斗力比第 j 行弱。

.. raw:: html

   </p>

.. raw:: html

   <p>

军人 总是 排在一行中的靠前位置，也就是说 1 总是出现在 0 之前。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>mat = 
   [[1,1,0,0,0],
    [1,1,1,1,0],
    [1,0,0,0,0],
    [1,1,0,0,0],
    [1,1,1,1,1]], 
   k = 3
   <strong>输出：</strong>[2,0,3]
   <strong>解释：</strong>
   每行中的军人数目：
   行 0 -&gt; 2 
   行 1 -&gt; 4 
   行 2 -&gt; 1 
   行 3 -&gt; 2 
   行 4 -&gt; 5 
   从最弱到最强对这些行排序后得到 [2,0,3,1,4]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>mat = 
   [[1,0,0,0],
   &nbsp;[1,1,1,1],
   &nbsp;[1,0,0,0],
   &nbsp;[1,0,0,0]], 
   k = 2
   <strong>输出：</strong>[0,2]
   <strong>解释：</strong> 
   每行中的军人数目：
   行 0 -&gt; 1 
   行 1 -&gt; 4 
   行 2 -&gt; 1 
   行 3 -&gt; 1 
   从最弱到最强对这些行排序后得到 [0,2,3,1]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>m == mat.length</code></li>
    <li><code>n == mat[i].length</code></li>
    <li><code>2 &lt;= n, m &lt;= 100</code></li>
    <li><code>1 &lt;= k &lt;= m</code></li>
    <li><code>matrix[i][j]</code> 不是 0 就是 1</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

数组

.. raw:: html

   </li>

.. raw:: html

   <li>

二分查找

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
