[0385] 迷你语法分析器
=====================

-  https://leetcode-cn.com/problems/mini-parser

题目描述
--------

.. raw:: html

   <p>

给定一个用字符串表示的整数的嵌套列表，实现一个解析它的语法分析器。

.. raw:: html

   </p>

.. raw:: html

   <p>

列表中的每个元素只可能是整数或整数嵌套列表

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：你可以假定这些字符串都是格式良好的：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>字符串非空</li>
    <li>字符串不包含空格</li>
    <li>字符串只包含数字<code>0-9</code>, <code>[</code>, <code>-</code> <code>,</code>, <code>]</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre>
   给定 s = &quot;324&quot;,

   你应该返回一个 NestedInteger 对象，其中只包含整数值 324。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre>
   给定 s = &quot;[123,[456,[789]]]&quot;,

   返回一个 NestedInteger 对象包含一个有两个元素的嵌套列表：

   1. 一个 integer 包含值 123
   2. 一个包含两个元素的嵌套列表：
       i.  一个 integer 包含值 456
       ii. 一个包含一个元素的嵌套列表
            a. 一个 integer 包含值 789
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

栈

.. raw:: html

   </li>

.. raw:: html

   <li>

字符串

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * // This is the interface that allows for creating nested lists.
     * // You should not implement it, or speculate about its implementation
     * class NestedInteger {
     *   public:
     *     // Constructor initializes an empty nested list.
     *     NestedInteger();
     *
     *     // Constructor initializes a single integer.
     *     NestedInteger(int value);
     *
     *     // Return true if this NestedInteger holds a single integer, rather than a nested list.
     *     bool isInteger() const;
     *
     *     // Return the single integer that this NestedInteger holds, if it holds a single integer
     *     // The result is undefined if this NestedInteger holds a nested list
     *     int getInteger() const;
     *
     *     // Set this NestedInteger to hold a single integer.
     *     void setInteger(int value);
     *
     *     // Set this NestedInteger to hold a nested list and adds a nested integer to it.
     *     void add(const NestedInteger &ni);
     *
     *     // Return the nested list that this NestedInteger holds, if it holds a nested list
     *     // The result is undefined if this NestedInteger holds a single integer
     *     const vector<NestedInteger> &getList() const;
     * };
     */
    class Solution {
    public:
        NestedInteger deserialize(string s) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
