[0933] 最近的请求次数
=====================

-  https://leetcode-cn.com/problems/number-of-recent-calls

题目描述
--------

.. raw:: html

   <p>

写一个 RecentCounter 类来计算最近的请求。

.. raw:: html

   </p>

.. raw:: html

   <p>

它只有一个方法：ping(int t)，其中 t 代表以毫秒为单位的某个时间。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回从 3000 毫秒前到现在的 ping 数。

.. raw:: html

   </p>

.. raw:: html

   <p>

任何处于 [t - 3000, t] 时间范围之内的
ping 都将会被计算在内，包括当前（指 t 时刻）的 ping。

.. raw:: html

   </p>

.. raw:: html

   <p>

保证每次对 ping 的调用都使用比之前更大的 t 值。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>inputs = [&quot;RecentCounter&quot;,&quot;ping&quot;,&quot;ping&quot;,&quot;ping&quot;,&quot;ping&quot;], inputs = [[],[1],[100],[3001],[3002]]
   <strong>输出：</strong>[null,1,2,3,3]</pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>每个测试用例最多调用&nbsp;<code>10000</code>&nbsp;次&nbsp;<code>ping</code>。</li>
    <li>每个测试用例会使用严格递增的 <code>t</code> 值来调用&nbsp;<code>ping</code>。</li>
    <li>每次调用 <code>ping</code>&nbsp;都有&nbsp;<code>1 &lt;= t &lt;= 10^9</code>。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

队列

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class RecentCounter {
    public:
        RecentCounter() {

        }
        
        int ping(int t) {

        }
    };

    /**
     * Your RecentCounter object will be instantiated and called as such:
     * RecentCounter* obj = new RecentCounter();
     * int param_1 = obj->ping(t);
     */

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
