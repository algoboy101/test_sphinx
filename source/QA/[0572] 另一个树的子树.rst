[0572] 另一个树的子树
=====================

-  https://leetcode-cn.com/problems/subtree-of-another-tree

题目描述
--------

.. raw:: html

   <p>

给定两个非空二叉树 s 和 t，检验 s 中是否包含和 t
具有相同结构和节点值的子树。s 的一个子树包括 s
的一个节点和这个节点的所有子孙。s 也可以看做它自身的一棵子树。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1: 给定的树 s:

.. raw:: html

   </p>

.. raw:: html

   <pre>
        3
       / \
      4   5
     / \
    1   2
   </pre>

.. raw:: html

   <p>

给定的树 t：

.. raw:: html

   </p>

.. raw:: html

   <pre>
      4 
     / \
    1   2
   </pre>

.. raw:: html

   <p>

返回 true，因为 t 与 s 的一个子树拥有相同的结构和节点值。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 2: 给定的树 s：

.. raw:: html

   </p>

.. raw:: html

   <pre>
        3
       / \
      4   5
     / \
    1   2
       /
      0
   </pre>

.. raw:: html

   <p>

给定的树 t：

.. raw:: html

   </p>

.. raw:: html

   <pre>
      4
     / \
    1   2
   </pre>

.. raw:: html

   <p>

返回 false。

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        bool isSubtree(TreeNode* s, TreeNode* t) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
