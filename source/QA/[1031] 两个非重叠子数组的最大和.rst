[1031] 两个非重叠子数组的最大和
===============================

-  https://leetcode-cn.com/problems/maximum-sum-of-two-non-overlapping-subarrays

题目描述
--------

.. raw:: html

   <p>

给出非负整数数组 A
，返回两个非重叠（连续）子数组中元素的最大和，子数组的长度分别为 L 和
M。（这里需要澄清的是，长为 L 的子数组可以出现在长为 M
的子数组之前或之后。）

.. raw:: html

   </p>

.. raw:: html

   <p>

从形式上看，返回最大的 V，而 V = (A[i] + A[i+1] + ... + A[i+L-1]) +
(A[j] + A[j+1] + ... + A[j+M-1]) 并满足下列条件之一：

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>0 &lt;= i &lt; i + L - 1 &lt; j &lt; j + M - 1 &lt; A.length</code>, <strong>或</strong></li>
    <li><code>0 &lt;= j &lt; j + M - 1 &lt; i &lt; i + L - 1 &lt; A.length</code>.</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>A = [0,6,5,2,2,5,1,9,4], L = 1, M = 2
   <strong>输出：</strong>20
   <strong>解释：</strong>子数组的一种选择中，[9] 长度为 1，[6,5] 长度为 2。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>A = [3,8,1,3,2,1,8,9,0], L = 3, M = 2
   <strong>输出：</strong>29
   <strong>解释：</strong>子数组的一种选择中，[3,8,1] 长度为 3，[8,9] 长度为 2。
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>A = [2,1,5,6,0,9,5,0,3,8], L = 4, M = 3
   <strong>输出：</strong>31
   <strong>解释：</strong>子数组的一种选择中，[5,6,0,9] 长度为 4，[0,3,8] 长度为 3。</pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>L &gt;= 1</code></li>
    <li><code>M &gt;= 1</code></li>
    <li><code>L + M &lt;= A.length &lt;= 1000</code></li>
    <li><code>0 &lt;= A[i] &lt;= 1000</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

数组

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int maxSumTwoNoOverlap(vector<int>& A, int L, int M) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
