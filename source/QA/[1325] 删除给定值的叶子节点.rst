[1325] 删除给定值的叶子节点
===========================

-  https://leetcode-cn.com/problems/delete-leaves-with-a-given-value

题目描述
--------

.. raw:: html

   <p>

给你一棵以 root 为根的二叉树和一个整数 target ，请你删除所有值为 target
的 叶子节点 。

.. raw:: html

   </p>

.. raw:: html

   <p>

注意，一旦删除值为 target 的叶子节点，它的父节点就可能变成叶子节点；如果新叶子节点的值恰好也是 target
，那么这个节点也应该被删除。

.. raw:: html

   </p>

.. raw:: html

   <p>

也就是说，你需要重复此过程直到不能继续删除。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root = [1,2,3,2,null,2,4], target = 2
   <strong>输出：</strong>[1,null,3,null,4]
   <strong>解释：
   </strong>上面左边的图中，绿色节点为叶子节点，且它们的值与 target 相同（同为 2 ），它们会被删除，得到中间的图。
   有一个新的节点变成了叶子节点且它的值与 target 相同，所以将再次进行删除，从而得到最右边的图。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root = [1,3,3,3,2], target = 3
   <strong>输出：</strong>[1,3,null,null,2]
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root = [1,2,null,2,null,2], target = 2
   <strong>输出：</strong>[1]
   <strong>解释：</strong>每一步都删除一个绿色的叶子节点（值为 2）。</pre>

.. raw:: html

   <p>

示例 4：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root = [1,1,1], target = 1
   <strong>输出：</strong>[]
   </pre>

.. raw:: html

   <p>

示例 5：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root = [1,2,3], target = 1
   <strong>输出：</strong>[1,2,3]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= target&nbsp;&lt;= 1000</code></li>
    <li>每一棵树最多有 <code>3000</code> 个节点。</li>
    <li>每一个节点值的范围是&nbsp;<code>[1, 1000]</code>&nbsp;。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        TreeNode* removeLeafNodes(TreeNode* root, int target) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
