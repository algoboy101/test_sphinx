[0662] 二叉树最大宽度
=====================

-  https://leetcode-cn.com/problems/maximum-width-of-binary-tree

题目描述
--------

.. raw:: html

   <p>

给定一个二叉树，编写一个函数来获取这个树的最大宽度。树的宽度是所有层中的最大宽度。这个二叉树与满二叉树（full
binary tree）结构相同，但一些节点为空。

.. raw:: html

   </p>

.. raw:: html

   <p>

每一层的宽度被定义为两个端点（该层最左和最右的非空节点，两端点间的null节点也计入长度）之间的长度。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入:</strong> 

              1
            /   \
           3     2
          / \     \  
         5   3     9 

   <strong>输出:</strong> 4
   <strong>解释:</strong> 最大值出现在树的第 3 层，宽度为 4 (5,3,null,9)。
   </pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入:</strong> 

             1
            /  
           3    
          / \       
         5   3     

   <strong>输出:</strong> 2
   <strong>解释:</strong> 最大值出现在树的第 3 层，宽度为 2 (5,3)。
   </pre>

.. raw:: html

   <p>

示例 3:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入:</strong> 

             1
            / \
           3   2 
          /        
         5      

   <strong>输出:</strong> 2
   <strong>解释:</strong> 最大值出现在树的第 2 层，宽度为 2 (3,2)。
   </pre>

.. raw:: html

   <p>

示例 4:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入:</strong> 

             1
            / \
           3   2
          /     \  
         5       9 
        /         \
       6           7
   <strong>输出:</strong> 8
   <strong>解释:</strong> 最大值出现在树的第 4 层，宽度为 8 (6,null,null,null,null,null,null,7)。
   </pre>

.. raw:: html

   <p>

注意: 答案在32位有符号整数的表示范围内。

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        int widthOfBinaryTree(TreeNode* root) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
