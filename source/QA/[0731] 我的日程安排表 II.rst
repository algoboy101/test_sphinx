[0731] 我的日程安排表 II
========================

-  https://leetcode-cn.com/problems/my-calendar-ii

题目描述
--------

.. raw:: html

   <p>

实现一个 MyCalendar
类来存放你的日程安排。如果要添加的时间内不会导致三重预订时，则可以存储这个新的日程安排。

.. raw:: html

   </p>

.. raw:: html

   <p>

MyCalendar 有一个 book(int start, int end)方法。它意味着在 start 到 end
时间内增加一个日程安排，注意，这里的时间是半开区间，即 [start, end),
实数 x 的范围为，  start <= x < end。

.. raw:: html

   </p>

.. raw:: html

   <p>

当三个日程安排有一些时间上的交叉时（例如三个日程安排都在同一时间内），就会产生三重预订。

.. raw:: html

   </p>

.. raw:: html

   <p>

每次调用
MyCalendar.book方法时，如果可以将日程安排成功添加到日历中而不会导致三重预订，返回
true。否则，返回 false 并且不要将该日程安排添加到日历中。

.. raw:: html

   </p>

.. raw:: html

   <p>

请按照以下步骤调用MyCalendar 类: MyCalendar cal = new MyCalendar();
MyCalendar.book(start, end)

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre>MyCalendar();
   MyCalendar.book(10, 20); // returns true
   MyCalendar.book(50, 60); // returns true
   MyCalendar.book(10, 40); // returns true
   MyCalendar.book(5, 15); // returns false
   MyCalendar.book(5, 10); // returns true
   MyCalendar.book(25, 55); // returns true
   <strong>解释：</strong> 
   前两个日程安排可以添加至日历中。 第三个日程安排会导致双重预订，但可以添加至日历中。
   第四个日程安排活动（5,15）不能添加至日历中，因为它会导致三重预订。
   第五个日程安排（5,10）可以添加至日历中，因为它未使用已经双重预订的时间10。
   第六个日程安排（25,55）可以添加至日历中，因为时间 [25,40] 将和第三个日程安排双重预订；
   时间 [40,50] 将单独预订，时间 [50,55）将和第二个日程安排双重预订。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>每个测试用例，调用&nbsp;<code>MyCalendar.book</code>&nbsp;函数最多不超过&nbsp;<code>1000</code>次。</li>
    <li>调用函数&nbsp;<code>MyCalendar.book(start, end)</code>时，&nbsp;<code>start</code> 和&nbsp;<code>end</code> 的取值范围为&nbsp;<code>[0, 10^9]</code>。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

Ordered Map

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class MyCalendarTwo {
    public:
        MyCalendarTwo() {

        }
        
        bool book(int start, int end) {

        }
    };

    /**
     * Your MyCalendarTwo object will be instantiated and called as such:
     * MyCalendarTwo* obj = new MyCalendarTwo();
     * bool param_1 = obj->book(start,end);
     */

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
