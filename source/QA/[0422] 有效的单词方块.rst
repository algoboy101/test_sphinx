[0422] 有效的单词方块
=====================

-  https://leetcode-cn.com/problems/valid-word-square

题目描述
--------

.. raw:: html

   <p>

给你一个单词序列，判断其是否形成了一个有效的单词方块。

.. raw:: html

   </p>

.. raw:: html

   <p>

有效的单词方块是指此由单词序列组成的文字方块的 第 k 行 和 第 k 列 (0 ≤ k
< max(行数, 列数)) 所显示的字符串完全相同。

.. raw:: html

   </p>

.. raw:: html

   <p>

注意：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>给定的单词数大于等于 1 且不超过 500。</li>
    <li>单词长度大于等于 1 且不超过 500。</li>
    <li>每个单词只包含小写英文字母&nbsp;<code>a-z</code>。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>
   [
     &quot;abcd&quot;,
     &quot;bnrt&quot;,
     &quot;crmy&quot;,
     &quot;dtye&quot;
   ]

   <strong>输出：</strong>
   true

   <strong>解释：</strong>
   第 1 行和第 1 列都是 &quot;abcd&quot;。
   第 2 行和第 2 列都是 &quot;bnrt&quot;。
   第 3 行和第 3 列都是 &quot;crmy&quot;。
   第 4 行和第 4 列都是 &quot;dtye&quot;。

   因此，这是一个有效的单词方块。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>
   [
     &quot;abcd&quot;,
     &quot;bnrt&quot;,
     &quot;crm&quot;,
     &quot;dt&quot;
   ]

   <strong>输出：</strong>
   true

   <strong>解释：</strong>
   第 1 行和第 1 列都是 &quot;abcd&quot;。
   第 2 行和第 2 列都是 &quot;bnrt&quot;。
   第 3 行和第 3 列都是 &quot;crm&quot;。
   第 4 行和第 4 列都是 &quot;dt&quot;。

   因此，这是一个有效的单词方块。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>
   [
     &quot;ball&quot;,
     &quot;area&quot;,
     &quot;read&quot;,
     &quot;lady&quot;
   ]

   <strong>输出：</strong>
   false

   <strong>解释：</strong>
   第 3 行是 &quot;read&quot; ，然而第 3 列是 &quot;lead&quot;。

   因此，这 <strong>不是</strong> 一个有效的单词方块。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        bool validWordSquare(vector<string>& words) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
