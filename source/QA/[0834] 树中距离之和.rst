[0834] 树中距离之和
===================

-  https://leetcode-cn.com/problems/sum-of-distances-in-tree

题目描述
--------

.. raw:: html

   <p>

给定一个无向、连通的树。树中有 N 个标记为 0...N-1 的节点以及 N-1 条边 。

.. raw:: html

   </p>

.. raw:: html

   <p>

第 i 条边连接节点 edges[i][0] 和 edges[i][1] 。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回一个表示节点 i 与其他所有节点距离之和的列表 ans。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入: </strong>N = 6, edges = [[0,1],[0,2],[2,3],[2,4],[2,5]]
   <strong>输出: </strong>[8,12,6,10,10,10]
   <strong>解释: </strong>
   如下为给定的树的示意图：
     0
    / \
   1   2
      /|\
     3 4 5

   我们可以计算出 dist(0,1) + dist(0,2) + dist(0,3) + dist(0,4) + dist(0,5) 
   也就是 1 + 1 + 2 + 2 + 2 = 8。 因此，answer[0] = 8，以此类推。
   </pre>

.. raw:: html

   <p>

说明: 1 <= N <= 10000

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<int> sumOfDistancesInTree(int N, vector<vector<int>>& edges) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
