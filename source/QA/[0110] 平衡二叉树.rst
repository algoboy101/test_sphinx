[0110] 平衡二叉树
=================

-  https://leetcode-cn.com/problems/balanced-binary-tree

题目描述
--------

.. raw:: html

   <p>

给定一个二叉树，判断它是否是高度平衡的二叉树。

.. raw:: html

   </p>

.. raw:: html

   <p>

本题中，一棵高度平衡二叉树定义为：

.. raw:: html

   </p>

.. raw:: html

   <blockquote>

.. raw:: html

   <p>

一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过1。

.. raw:: html

   </p>

.. raw:: html

   </blockquote>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <p>

给定二叉树 [3,9,20,null,null,15,7]

.. raw:: html

   </p>

.. raw:: html

   <pre>    3
      / \
     9  20
       /  \
      15   7</pre>

.. raw:: html

   <p>

返回 true 。 示例 2:

.. raw:: html

   </p>

.. raw:: html

   <p>

给定二叉树 [1,2,2,3,3,null,null,4,4]

.. raw:: html

   </p>

.. raw:: html

   <pre>       1
         / \
        2   2
       / \
      3   3
     / \
    4   4
   </pre>

.. raw:: html

   <p>

返回 false 。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        bool isBalanced(TreeNode* root) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
