[0847] 访问所有节点的最短路径
=============================

-  https://leetcode-cn.com/problems/shortest-path-visiting-all-nodes

题目描述
--------

.. raw:: html

   <p>

给出 graph 为有 N 个节点（编号为 0, 1, 2, ..., N-1）的无向连通图。 

.. raw:: html

   </p>

.. raw:: html

   <p>

graph.length = N，且只有节点 i 和 j 连通时，j !=
i 在列表 graph[i] 中恰好出现一次。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回能够访问所有节点的最短路径的长度。你可以在任一节点开始和停止，也可以多次重访节点，并且可以重用边。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <ol>

.. raw:: html

   </ol>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[1,2,3],[0],[0],[0]]
   <strong>输出：</strong>4
   <strong>解释：</strong>一个可能的路径为 [1,0,2,0,3]</pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[1],[0,2,4],[1,3,4],[2],[1,2]]
   <strong>输出：</strong>4
   <strong>解释：</strong>一个可能的路径为 [0,1,4,2,3]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= graph.length &lt;= 12</code></li>
    <li><code>0 &lt;= graph[i].length &lt;&nbsp;graph.length</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

广度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int shortestPathLength(vector<vector<int>>& graph) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
