[0300] 最长上升子序列
=====================

-  https://leetcode-cn.com/problems/longest-increasing-subsequence

题目描述
--------

.. raw:: html

   <p>

给定一个无序的整数数组，找到其中最长上升子序列的长度。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> <code>[10,9,2,5,3,7,101,18]
   </code><strong>输出: </strong>4 
   <strong>解释: </strong>最长的上升子序列是&nbsp;<code>[2,3,7,101]，</code>它的长度是 <code>4</code>。</pre>

.. raw:: html

   <p>

说明:

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>可能会有多种最长上升子序列的组合，你只需要输出对应的长度即可。</li>
    <li>你算法的时间复杂度应该为&nbsp;O(<em>n<sup>2</sup></em>) 。</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

进阶: 你能将算法的时间复杂度降低到 O(n log n) 吗?

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

二分查找

.. raw:: html

   </li>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int lengthOfLIS(vector<int>& nums) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
