[0501] 二叉搜索树中的众数
=========================

-  https://leetcode-cn.com/problems/find-mode-in-binary-search-tree

题目描述
--------

.. raw:: html

   <p>

给定一个有相同值的二叉搜索树（BST），找出 BST
中的所有众数（出现频率最高的元素）。

.. raw:: html

   </p>

.. raw:: html

   <p>

假定 BST 有如下定义：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>结点左子树中所含结点的值小于等于当前结点的值</li>
    <li>结点右子树中所含结点的值大于等于当前结点的值</li>
    <li>左子树和右子树都是二叉搜索树</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

例如： 给定 BST [1,null,2,2],

.. raw:: html

   </p>

.. raw:: html

   <pre>   1
       \
        2
       /
      2
   </pre>

.. raw:: html

   <p>

返回[2].

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：如果众数超过1个，不需考虑输出顺序

.. raw:: html

   </p>

.. raw:: html

   <p>

进阶：你可以不使用额外的空间吗？（假设由递归产生的隐式调用栈的开销不被计算在内）

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        vector<int> findMode(TreeNode* root) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
