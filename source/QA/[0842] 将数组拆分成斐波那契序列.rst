[0842] 将数组拆分成斐波那契序列
===============================

-  https://leetcode-cn.com/problems/split-array-into-fibonacci-sequence

题目描述
--------

.. raw:: html

   <p>

给定一个数字字符串 S，比如 S =
"123456579"，我们可以将它分成斐波那契式的序列 [123, 456, 579]。

.. raw:: html

   </p>

.. raw:: html

   <p>

形式上，斐波那契式序列是一个非负整数列表 F，且满足：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>0 &lt;= F[i] &lt;= 2^31 - 1</code>，（也就是说，每个整数都符合 32 位有符号整数类型）；</li>
    <li><code>F.length &gt;= 3</code>；</li>
    <li>对于所有的<code>0 &lt;= i &lt; F.length - 2</code>，都有 <code>F[i] + F[i+1] = F[i+2]</code> 成立。</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

另外，请注意，将字符串拆分成小块时，每个块的数字一定不要以零开头，除非这个块是数字
0 本身。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回从 S 拆分出来的所有斐波那契式的序列块，如果不能拆分则返回 []。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>&quot;123456579&quot;
   <strong>输出：</strong>[123,456,579]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入: </strong>&quot;11235813&quot;
   <strong>输出: </strong>[1,1,2,3,5,8,13]
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入: </strong>&quot;112358130&quot;
   <strong>输出: </strong>[]
   <strong>解释: </strong>这项任务无法完成。
   </pre>

.. raw:: html

   <p>

示例 4：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>&quot;0123&quot;
   <strong>输出：</strong>[]
   <strong>解释：</strong>每个块的数字不能以零开头，因此 &quot;01&quot;，&quot;2&quot;，&quot;3&quot; 不是有效答案。
   </pre>

.. raw:: html

   <p>

示例 5：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入: </strong>&quot;1101111&quot;
   <strong>输出: </strong>[110, 1, 111]
   <strong>解释: </strong>输出 [11,0,11,11] 也同样被接受。
   </pre>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= S.length&nbsp;&lt;= 200</code></li>
    <li>字符串 <code>S</code> 中只含有数字。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

贪心算法

.. raw:: html

   </li>

.. raw:: html

   <li>

字符串

.. raw:: html

   </li>

.. raw:: html

   <li>

回溯算法

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<int> splitIntoFibonacci(string S) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
