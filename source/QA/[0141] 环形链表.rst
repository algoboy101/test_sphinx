[0141] 环形链表
===============

-  https://leetcode-cn.com/problems/linked-list-cycle

题目描述
--------

.. raw:: html

   <p>

给定一个链表，判断链表中是否有环。

.. raw:: html

   </p>

.. raw:: html

   <p>

为了表示给定链表中的环，我们使用整数 pos
来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 pos 是
-1，则在该链表中没有环。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>head = [3,2,0,-4], pos = 1
   <strong>输出：</strong>true
   <strong>解释：</strong>链表中有一个环，其尾部连接到第二个节点。
   </pre>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>head = [1,2], pos = 0
   <strong>输出：</strong>true
   <strong>解释：</strong>链表中有一个环，其尾部连接到第一个节点。
   </pre>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>head = [1], pos = -1
   <strong>输出：</strong>false
   <strong>解释：</strong>链表中没有环。
   </pre>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

进阶：

.. raw:: html

   </p>

.. raw:: html

   <p>

你能用 O(1)（即，常量）内存解决此问题吗？

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

链表

.. raw:: html

   </li>

.. raw:: html

   <li>

双指针

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for singly-linked list.
     * struct ListNode {
     *     int val;
     *     ListNode *next;
     *     ListNode(int x) : val(x), next(NULL) {}
     * };
     */
    class Solution {
    public:
        bool hasCycle(ListNode *head) {
            
        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
