[1057] 校园自行车分配
=====================

-  https://leetcode-cn.com/problems/campus-bikes

题目描述
--------

.. raw:: html

   <p>

在由 2D 网格表示的校园里有 n 位工人（worker）和 m 辆自行车（bike），n <=
m。所有工人和自行车的位置都用网格上的 2D 坐标表示。

.. raw:: html

   </p>

.. raw:: html

   <p>

我们需要为每位工人分配一辆自行车。在所有可用的自行车和工人中，我们选取彼此之间曼哈顿距离最短的工人自行车对 
(worker, bike) ，并将其中的自行车分配給工人。如果有多个 (worker, bike)
对之间的曼哈顿距离相同，那么我们选择工人索引最小的那对。类似地，如果有多种不同的分配方法，则选择自行车索引最小的一对。不断重复这一过程，直到所有工人都分配到自行车为止。

.. raw:: html

   </p>

.. raw:: html

   <p>

给定两点 p1 和 p2 之间的曼哈顿距离为 Manhattan(p1, p2) = \|p1.x - p2.x\|
+ \|p1.y - p2.y\|。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回长度为 n 的向量 ans，其中 a[i] 是第 i 位工人分配到的自行车的索引（从
0 开始）。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>workers = [[0,0],[2,1]], bikes = [[1,2],[3,3]]
   <strong>输出：</strong>[1,0]
   <strong>解释：</strong>
   工人 1 分配到自行车 0，因为他们最接近且不存在冲突，工人 0 分配到自行车 1 。所以输出是 [1,0]。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>workers = [[0,0],[1,1],[2,0]], bikes = [[1,0],[2,2],[2,1]]
   <strong>输出：</strong>[0,2,1]
   <strong>解释：</strong>
   工人 0 首先分配到自行车 0 。工人 1 和工人 2 与自行车 2 距离相同，因此工人 1 分配到自行车 2，工人 2 将分配到自行车 1 。因此输出为 [0,2,1]。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>0 &lt;= workers[i][j], bikes[i][j] &lt; 1000</code></li>
    <li>所有工人和自行车的位置都不相同。</li>
    <li><code>1 &lt;= workers.length &lt;= bikes.length &lt;= 1000</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

贪心算法

.. raw:: html

   </li>

.. raw:: html

   <li>

排序

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<int> assignBikes(vector<vector<int>>& workers, vector<vector<int>>& bikes) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
