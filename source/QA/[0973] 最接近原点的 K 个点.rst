[0973] 最接近原点的 K 个点
==========================

-  https://leetcode-cn.com/problems/k-closest-points-to-origin

题目描述
--------

.. raw:: html

   <p>

我们有一个由平面上的点组成的列表 points。需要从中找出 K 个距离原点 (0,
0) 最近的点。

.. raw:: html

   </p>

.. raw:: html

   <p>

（这里，平面上两点之间的距离是欧几里德距离。）

.. raw:: html

   </p>

.. raw:: html

   <p>

你可以按任何顺序返回答案。除了点坐标的顺序之外，答案确保是唯一的。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>points = [[1,3],[-2,2]], K = 1
   <strong>输出：</strong>[[-2,2]]
   <strong>解释： </strong>
   (1, 3) 和原点之间的距离为 sqrt(10)，
   (-2, 2) 和原点之间的距离为 sqrt(8)，
   由于 sqrt(8) &lt; sqrt(10)，(-2, 2) 离原点更近。
   我们只需要距离原点最近的 K = 1 个点，所以答案就是 [[-2,2]]。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>points = [[3,3],[5,-1],[-2,4]], K = 2
   <strong>输出：</strong>[[3,3],[-2,4]]
   （答案 [[-2,4],[3,3]] 也会被接受。）
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= K &lt;= points.length &lt;= 10000</code></li>
    <li><code>-10000 &lt; points[i][0] &lt; 10000</code></li>
    <li><code>-10000 &lt; points[i][1] &lt; 10000</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

堆

.. raw:: html

   </li>

.. raw:: html

   <li>

排序

.. raw:: html

   </li>

.. raw:: html

   <li>

分治算法

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<vector<int>> kClosest(vector<vector<int>>& points, int K) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
