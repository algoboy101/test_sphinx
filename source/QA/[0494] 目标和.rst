[0494] 目标和
=============

-  https://leetcode-cn.com/problems/target-sum

题目描述
--------

.. raw:: html

   <p>

给定一个非负整数数组，a1, a2, ..., an,
和一个目标数，S。现在你有两个符号 + 和 -。对于数组中的任意一个整数，你都可以从 + 或 -中选择一个符号添加在前面。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回可以使最终数组和为目标数 S 的所有添加符号的方法数。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> nums: [1, 1, 1, 1, 1], S: 3
   <strong>输出:</strong> 5
   <strong>解释:</strong> 

   -1+1+1+1+1 = 3
   +1-1+1+1+1 = 3
   +1+1-1+1+1 = 3
   +1+1+1-1+1 = 3
   +1+1+1+1-1 = 3

   一共有5种方法让最终目标和为3。
   </pre>

.. raw:: html

   <p>

注意:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>数组非空，且长度不会超过20。</li>
    <li>初始的数组的和不会超过1000。</li>
    <li>保证返回的最终结果能被32位整数存下。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int findTargetSumWays(vector<int>& nums, int S) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
