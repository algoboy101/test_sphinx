[0892] 三维形体的表面积
=======================

-  https://leetcode-cn.com/problems/surface-area-of-3d-shapes

题目描述
--------

.. raw:: html

   <p>

在 N \ * N 的网格上，我们放置一些 1 * 1 \* 1  的立方体。

.. raw:: html

   </p>

.. raw:: html

   <p>

每个值 v = grid[i][j] 表示 v 个正方体叠放在对应单元格 (i, j) 上。

.. raw:: html

   </p>

.. raw:: html

   <p>

请你返回最终形体的表面积。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <ul>

.. raw:: html

   </ul>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[2]]
   <strong>输出：</strong>10
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[1,2],[3,4]]
   <strong>输出：</strong>34
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[1,0],[0,2]]
   <strong>输出：</strong>16
   </pre>

.. raw:: html

   <p>

示例 4：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[1,1,1],[1,0,1],[1,1,1]]
   <strong>输出：</strong>32
   </pre>

.. raw:: html

   <p>

示例 5：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[2,2,2],[2,1,2],[2,2,2]]
   <strong>输出：</strong>46
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= N &lt;= 50</code></li>
    <li><code>0 &lt;= grid[i][j] &lt;= 50</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

几何

.. raw:: html

   </li>

.. raw:: html

   <li>

数学

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int surfaceArea(vector<vector<int>>& grid) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
