[0079] 单词搜索
===============

-  https://leetcode-cn.com/problems/word-search

题目描述
--------

.. raw:: html

   <p>

给定一个二维网格和一个单词，找出该单词是否存在于网格中。

.. raw:: html

   </p>

.. raw:: html

   <p>

单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例:

.. raw:: html

   </p>

.. raw:: html

   <pre>board =
   [
     [&#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;E&#39;],
     [&#39;S&#39;,&#39;F&#39;,&#39;C&#39;,&#39;S&#39;],
     [&#39;A&#39;,&#39;D&#39;,&#39;E&#39;,&#39;E&#39;]
   ]

   给定 word = &quot;<strong>ABCCED</strong>&quot;, 返回 <strong>true</strong>.
   给定 word = &quot;<strong>SEE</strong>&quot;, 返回 <strong>true</strong>.
   给定 word = &quot;<strong>ABCB</strong>&quot;, 返回 <strong>false</strong>.</pre>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

数组

.. raw:: html

   </li>

.. raw:: html

   <li>

回溯算法

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        bool exist(vector<vector<char>>& board, string word) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
