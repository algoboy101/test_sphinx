[0044] 通配符匹配
=================

-  https://leetcode-cn.com/problems/wildcard-matching

题目描述
--------

.. raw:: html

   <p>

给定一个字符串 (s) 和一个字符模式 (p)
，实现一个支持 '?' 和 '\*' 的通配符匹配。

.. raw:: html

   </p>

.. raw:: html

   <pre>&#39;?&#39; 可以匹配任何单个字符。
   &#39;*&#39; 可以匹配任意字符串（包括空字符串）。
   </pre>

.. raw:: html

   <p>

两个字符串完全匹配才算匹配成功。

.. raw:: html

   </p>

.. raw:: html

   <p>

说明:

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>s</code>&nbsp;可能为空，且只包含从&nbsp;<code>a-z</code>&nbsp;的小写字母。</li>
    <li><code>p</code>&nbsp;可能为空，且只包含从&nbsp;<code>a-z</code>&nbsp;的小写字母，以及字符&nbsp;<code>?</code>&nbsp;和&nbsp;<code>*</code>。</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   s = &quot;aa&quot;
   p = &quot;a&quot;
   <strong>输出:</strong> false
   <strong>解释:</strong> &quot;a&quot; 无法匹配 &quot;aa&quot; 整个字符串。</pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   s = &quot;aa&quot;
   p = &quot;*&quot;
   <strong>输出:</strong> true
   <strong>解释:</strong>&nbsp;&#39;*&#39; 可以匹配任意字符串。
   </pre>

.. raw:: html

   <p>

示例 3:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   s = &quot;cb&quot;
   p = &quot;?a&quot;
   <strong>输出:</strong> false
   <strong>解释:</strong>&nbsp;&#39;?&#39; 可以匹配 &#39;c&#39;, 但第二个 &#39;a&#39; 无法匹配 &#39;b&#39;。
   </pre>

.. raw:: html

   <p>

示例 4:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   s = &quot;adceb&quot;
   p = &quot;*a*b&quot;
   <strong>输出:</strong> true
   <strong>解释:</strong>&nbsp;第一个 &#39;*&#39; 可以匹配空字符串, 第二个 &#39;*&#39; 可以匹配字符串 &quot;dce&quot;.
   </pre>

.. raw:: html

   <p>

示例 5:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   s = &quot;acdcb&quot;
   p = &quot;a*c?b&quot;
   <strong>输入:</strong> false</pre>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

贪心算法

.. raw:: html

   </li>

.. raw:: html

   <li>

字符串

.. raw:: html

   </li>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   <li>

回溯算法

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        bool isMatch(string s, string p) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
