[1257] 最小公共区域
===================

-  https://leetcode-cn.com/problems/smallest-common-region

题目描述
--------

.. raw:: html

   <p>

给你一些区域列表 regions
，每个列表的第一个区域都包含这个列表内所有其他区域。

.. raw:: html

   </p>

.. raw:: html

   <p>

很自然地，如果区域 X 包含区域 Y ，那么区域 X  比区域 Y 大。

.. raw:: html

   </p>

.. raw:: html

   <p>

给定两个区域 region1 和 region2 ，找到同时包含这两个区域的 最小 区域。

.. raw:: html

   </p>

.. raw:: html

   <p>

如果区域列表中 r1 包含 r2 和 r3 ，那么数据保证 r2 不会包含 r3 。

.. raw:: html

   </p>

.. raw:: html

   <p>

数据同样保证最小公共区域一定存在。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入：
   </strong>regions = [[&quot;Earth&quot;,&quot;North America&quot;,&quot;South America&quot;],
   [&quot;North America&quot;,&quot;United States&quot;,&quot;Canada&quot;],
   [&quot;United States&quot;,&quot;New York&quot;,&quot;Boston&quot;],
   [&quot;Canada&quot;,&quot;Ontario&quot;,&quot;Quebec&quot;],
   [&quot;South America&quot;,&quot;Brazil&quot;]],
   region1 = &quot;Quebec&quot;,
   region2 = &quot;New York&quot;
   <strong>输出：</strong>&quot;North America&quot;
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>2 &lt;= regions.length &lt;= 10^4</code></li>
    <li><code>region1 != region2</code></li>
    <li>所有字符串只包含英文字母和空格，且最多只有&nbsp;20 个字母。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        string findSmallestRegion(vector<vector<string>>& regions, string region1, string region2) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
