[1019] 链表中的下一个更大节点
=============================

-  https://leetcode-cn.com/problems/next-greater-node-in-linked-list

题目描述
--------

.. raw:: html

   <p>

给出一个以头节点 head 作为第一个节点的链表。链表中的节点分别编号为：node\_1,
node\_2, node\_3, ... 。

.. raw:: html

   </p>

.. raw:: html

   <p>

每个节点都可能有下一个更大值（next larger
value）：对于 node\_i，如果其 next\_larger(node\_i) 是 node\_j.val，那么就有 j
> i 且  node\_j.val >
node\_i.val，而 j 是可能的选项中最小的那个。如果不存在这样的 j，那么下一个更大值为 0 。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回整数答案数组 answer，其中 answer[i] = next\_larger(node\_{i+1}) 。

.. raw:: html

   </p>

.. raw:: html

   <p>

注意：在下面的示例中，诸如 [2,1,5]
这样的输入（不是输出）是链表的序列化表示，其头节点的值为 2，第二个节点值为
1，第三个节点值为 5 。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[2,1,5]
   <strong>输出：</strong>[5,5,0]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[2,7,4,3,5]
   <strong>输出：</strong>[7,0,5,5,0]
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[1,7,5,1,9,2,5,1]
   <strong>输出：</strong>[7,9,9,9,0,5,0,0]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>对于链表中的每个节点，<code>1 &lt;= node.val&nbsp;&lt;= 10^9</code></li>
    <li>给定列表的长度在 <code>[0, 10000]</code>&nbsp;范围内</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

栈

.. raw:: html

   </li>

.. raw:: html

   <li>

链表

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for singly-linked list.
     * struct ListNode {
     *     int val;
     *     ListNode *next;
     *     ListNode(int x) : val(x), next(NULL) {}
     * };
     */
    class Solution {
    public:
        vector<int> nextLargerNodes(ListNode* head) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
