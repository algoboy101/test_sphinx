[0098] 验证二叉搜索树
=====================

-  https://leetcode-cn.com/problems/validate-binary-search-tree

题目描述
--------

.. raw:: html

   <p>

给定一个二叉树，判断其是否是一个有效的二叉搜索树。

.. raw:: html

   </p>

.. raw:: html

   <p>

假设一个二叉搜索树具有如下特征：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>节点的左子树只包含<strong>小于</strong>当前节点的数。</li>
    <li>节点的右子树只包含<strong>大于</strong>当前节点的数。</li>
    <li>所有左子树和右子树自身必须也是二叉搜索树。</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
       2
      / \
     1   3
   <strong>输出:</strong> true
   </pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:
   </strong>    5
      / \
     1   4
   &nbsp;    / \
   &nbsp;   3   6
   <strong>输出:</strong> false
   <strong>解释:</strong> 输入为: [5,1,4,null,null,3,6]。
   &nbsp;    根节点的值为 5 ，但是其右子节点值为 4 。
   </pre>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        bool isValidBST(TreeNode* root) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
