[1221] 分割平衡字符串
=====================

-  https://leetcode-cn.com/problems/split-a-string-in-balanced-strings

题目描述
--------

.. raw:: html

   <p>

在一个「平衡字符串」中，'L' 和 'R' 字符的数量是相同的。

.. raw:: html

   </p>

.. raw:: html

   <p>

给出一个平衡字符串 s，请你将它分割成尽可能多的平衡字符串。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回可以通过分割得到的平衡字符串的最大数量。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>s = &quot;RLRRLLRLRL&quot;
   <strong>输出：</strong>4
   <strong>解释：</strong>s 可以分割为 &quot;RL&quot;, &quot;RRLL&quot;, &quot;RL&quot;, &quot;RL&quot;, 每个子字符串中都包含相同数量的 &#39;L&#39; 和 &#39;R&#39;。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>s = &quot;RLLLLRRRLR&quot;
   <strong>输出：</strong>3
   <strong>解释：</strong>s 可以分割为 &quot;RL&quot;, &quot;LLLRRR&quot;, &quot;LR&quot;, 每个子字符串中都包含相同数量的 &#39;L&#39; 和 &#39;R&#39;。
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>s = &quot;LLLLRRRR&quot;
   <strong>输出：</strong>1
   <strong>解释：</strong>s 只能保持原样 &quot;LLLLRRRR&quot;.
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= s.length &lt;= 1000</code></li>
    <li><code>s[i] = &#39;L&#39; 或 &#39;R&#39;</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

贪心算法

.. raw:: html

   </li>

.. raw:: html

   <li>

字符串

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int balancedStringSplit(string s) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
