[0754] 到达终点数字
===================

-  https://leetcode-cn.com/problems/reach-a-number

题目描述
--------

.. raw:: html

   <p>

在一根无限长的数轴上，你站在0的位置。终点在target的位置。

.. raw:: html

   </p>

.. raw:: html

   <p>

每次你可以选择向左或向右移动。第 n 次移动（从 1 开始），可以走 n 步。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回到达终点需要的最小移动次数。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入:</strong> target = 3
   <strong>输出:</strong> 2
   <strong>解释:</strong>
   第一次移动，从 0 到 1 。
   第二次移动，从 1 到 3 。
   </pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入:</strong> target = 2
   <strong>输出:</strong> 3
   <strong>解释:</strong>
   第一次移动，从 0 到 1 。
   第二次移动，从 1 到 -1 。
   第三次移动，从 -1 到 2 。
   </pre>

.. raw:: html

   <p>

注意:

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>target</code>是在<code>[-10^9, 10^9]</code>范围中的非零整数。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

数学

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int reachNumber(int target) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
