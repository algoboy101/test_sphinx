[1305] 两棵二叉搜索树中的所有元素
=================================

-  https://leetcode-cn.com/problems/all-elements-in-two-binary-search-trees

题目描述
--------

.. raw:: html

   <p>

给你 root1 和 root2 这两棵二叉搜索树。

.. raw:: html

   </p>

.. raw:: html

   <p>

请你返回一个列表，其中包含 两棵树 中的所有整数并按 升序 排序。.

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root1 = [2,1,4], root2 = [1,0,3]
   <strong>输出：</strong>[0,1,1,2,3,4]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root1 = [0,-10,10], root2 = [5,1,7,0,2]
   <strong>输出：</strong>[-10,0,0,1,2,5,7,10]
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root1 = [], root2 = [5,1,7,0,2]
   <strong>输出：</strong>[0,1,2,5,7]
   </pre>

.. raw:: html

   <p>

示例 4：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root1 = [0,-10,10], root2 = []
   <strong>输出：</strong>[-10,0,10]
   </pre>

.. raw:: html

   <p>

示例 5：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root1 = [1,null,8], root2 = [8,1]
   <strong>输出：</strong>[1,1,8,8]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>每棵树最多有&nbsp;<code>5000</code>&nbsp;个节点。</li>
    <li>每个节点的值在&nbsp;<code>[-10^5, 10^5]</code>&nbsp;之间。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

排序

.. raw:: html

   </li>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
