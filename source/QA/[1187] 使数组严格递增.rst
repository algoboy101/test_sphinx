[1187] 使数组严格递增
=====================

-  https://leetcode-cn.com/problems/make-array-strictly-increasing

题目描述
--------

.. raw:: html

   <p>

给你两个整数数组 arr1 和
arr2，返回使 arr1 严格递增所需要的最小「操作」数（可能为 0）。

.. raw:: html

   </p>

.. raw:: html

   <p>

每一步「操作」中，你可以分别从 arr1 和 arr2 中各选出一个索引，分别为 i
和 j，0 <= i < arr1.length 和 0 <= j <
arr2.length，然后进行赋值运算 arr1[i] = arr2[j]。

.. raw:: html

   </p>

.. raw:: html

   <p>

如果无法让 arr1 严格递增，请返回 -1。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>arr1 = [1,5,3,6,7], arr2 = [1,3,2,4]
   <strong>输出：</strong>1
   <strong>解释：</strong>用 2 来替换 <code>5，之后</code> <code>arr1 = [1, 2, 3, 6, 7]</code>。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>arr1 = [1,5,3,6,7], arr2 = [4,3,1]
   <strong>输出：</strong>2
   <strong>解释：</strong>用 3 来替换 <code>5，然后</code>用 4 来替换 3<code>，得到</code> <code>arr1 = [1, 3, 4, 6, 7]</code>。
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>arr1 = [1,5,3,6,7], arr2 = [1,6,3,3]
   <strong>输出：</strong>-1
   <strong>解释：</strong>无法使 <code>arr1 严格递增</code>。</pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= arr1.length, arr2.length &lt;= 2000</code></li>
    <li><code>0 &lt;= arr1[i], arr2[i] &lt;= 10^9</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int makeArrayIncreasing(vector<int>& arr1, vector<int>& arr2) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
