[0519] 随机翻转矩阵
===================

-  https://leetcode-cn.com/problems/random-flip-matrix

题目描述
--------

.. raw:: html

   <p>

题中给出一个 n 行 n 列的二维矩阵 (n\_rows,n\_cols)，且所有值被初始化为
0。要求编写一个 flip 函数，均匀随机的将矩阵中的 0 变为
1，并返回该值的位置下标 [row\_id,col\_id]；同样编写一个 reset
函数，将所有的值都重新置为 0。尽量最少调用随机函数
Math.random()，并且优化时间和空间复杂度。

.. raw:: html

   </p>

.. raw:: html

   <p>

注意:

.. raw:: html

   </p>

.. raw:: html

   <p>

1.1 <= n\_rows, n\_cols <= 10000

.. raw:: html

   </p>

.. raw:: html

   <p>

2. 0 <= row.id < n\_rows 并且 0 <= col.id < n\_cols

   .. raw:: html

      </p>

.. raw:: html

   <p>

3.当矩阵中没有值为 0 时，不可以调用 flip 函数

.. raw:: html

   </p>

.. raw:: html

   <p>

4.调用 flip 和 reset 函数的次数加起来不会超过 1000 次

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入: 
   </strong>[&quot;Solution&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;flip&quot;]
   [[2,3],[],[],[],[]]
   <strong>输出: </strong>[null,[0,1],[1,2],[1,0],[1,1]]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入: 
   </strong>[&quot;Solution&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;reset&quot;,&quot;flip&quot;]
   [[1,2],[],[],[],[]]
   <strong>输出: </strong>[null,[0,0],[0,1],null,[0,0]]</pre>

.. raw:: html

   <p>

输入语法解释：

.. raw:: html

   </p>

.. raw:: html

   <p>

输入包含两个列表：被调用的子程序和他们的参数。Solution
的构造函数有两个参数，分别为 n\_rows 和 n\_cols。flip 和 reset
没有参数，参数总会以列表形式给出，哪怕该列表为空

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

Random

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        Solution(int n_rows, int n_cols) {

        }
        
        vector<int> flip() {

        }
        
        void reset() {

        }
    };

    /**
     * Your Solution object will be instantiated and called as such:
     * Solution* obj = new Solution(n_rows, n_cols);
     * vector<int> param_1 = obj->flip();
     * obj->reset();
     */

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
