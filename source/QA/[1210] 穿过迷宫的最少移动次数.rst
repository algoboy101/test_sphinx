[1210] 穿过迷宫的最少移动次数
=============================

-  https://leetcode-cn.com/problems/minimum-moves-to-reach-target-with-rotations

题目描述
--------

.. raw:: html

   <p>

你还记得那条风靡全球的贪吃蛇吗？

.. raw:: html

   </p>

.. raw:: html

   <p>

我们在一个 n\*n 的网格上构建了新的迷宫地图，蛇的长度为
2，也就是说它会占去两个单元格。蛇会从左上角（(0, 0) 和 (0,
1)）开始移动。我们用 0 表示空单元格，用 1
表示障碍物。蛇需要移动到迷宫的右下角（(n-1, n-2) 和 (n-1, n-1)）。

.. raw:: html

   </p>

.. raw:: html

   <p>

每次移动，蛇可以这样走：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>如果没有障碍，则向右移动一个单元格。并仍然保持身体的水平／竖直状态。</li>
    <li>如果没有障碍，则向下移动一个单元格。并仍然保持身体的水平／竖直状态。</li>
    <li>如果它处于水平状态并且其下面的两个单元都是空的，就顺时针旋转 90 度。蛇从（<code>(r, c)</code>、<code>(r, c+1)</code>）移动到 （<code>(r, c)</code>、<code>(r+1, c)</code>）。<br>
    <img alt="" src="https://raw.githubusercontent.com/algoboy101/LeetCodeCrowdsource/master/imgs/image-2.png" style="height: 134px; width: 300px;"></li>
    <li>如果它处于竖直状态并且其右面的两个单元都是空的，就逆时针旋转 90 度。蛇从（<code>(r, c)</code>、<code>(r+1, c)</code>）移动到（<code>(r, c)</code>、<code>(r, c+1)</code>）。<br>
    <img alt="" src="https://raw.githubusercontent.com/algoboy101/LeetCodeCrowdsource/master/imgs/image-1.png" style="height: 121px; width: 300px;"></li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

返回蛇抵达目的地所需的最少移动次数。

.. raw:: html

   </p>

.. raw:: html

   <p>

如果无法到达目的地，请返回 -1。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>grid = [[0,0,0,0,0,1],
                  [1,1,0,0,1,0],
   &nbsp;              [0,0,0,0,1,1],
   &nbsp;              [0,0,1,0,1,0],
   &nbsp;              [0,1,1,0,0,0],
   &nbsp;              [0,1,1,0,0,0]]
   <strong>输出：</strong>11
   <strong>解释：
   </strong>一种可能的解决方案是 [右, 右, 顺时针旋转, 右, 下, 下, 下, 下, 逆时针旋转, 右, 下]。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>grid = [[0,0,1,1,1,1],
   &nbsp;              [0,0,0,0,1,1],
   &nbsp;              [1,1,0,0,0,1],
   &nbsp;              [1,1,1,0,0,1],
   &nbsp;              [1,1,1,0,0,1],
   &nbsp;              [1,1,1,0,0,0]]
   <strong>输出：</strong>9
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>2 &lt;= n &lt;= 100</code></li>
    <li><code>0 &lt;= grid[i][j] &lt;= 1</code></li>
    <li>蛇保证从空单元格开始出发。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

广度优先搜索

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int minimumMoves(vector<vector<int>>& grid) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
