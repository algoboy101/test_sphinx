[0296] 最佳的碰头地点
=====================

-  https://leetcode-cn.com/problems/best-meeting-point

题目描述
--------

.. raw:: html

   <p>

有一队人（两人或以上）想要在一个地方碰面，他们希望能够最小化他们的总行走距离。

.. raw:: html

   </p>

.. raw:: html

   <p>

给你一个 2D 网格，其中各个格子内的值要么是 0，要么是 1。

.. raw:: html

   </p>

.. raw:: html

   <p>

1
表示某个人的家所处的位置。这里，我们将使用 曼哈顿距离 来计算，其中 distance(p1,
p2) = \|p2.x - p1.x\| + \|p2.y - p1.y\|。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> 

   1 - 0 - 0 - 0 - 1
   |   |   |   |   |
   0 - 0 - 0 - 0 - 0
   |   |   |   |   |
   0 - 0 - 1 - 0 - 0

   <strong>输出: 6 

   解析: </strong>给定的三个人分别住在<code>(0,0)<span style="">，</span></code><code>(0,4) </code>和 <code>(2,2)</code>:
   &nbsp;    <code>(0,2)</code> 是一个最佳的碰面点，其总行走距离为 2 + 2 + 2 = 6，最小，因此返回 6。</pre>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

排序

.. raw:: html

   </li>

.. raw:: html

   <li>

数学

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int minTotalDistance(vector<vector<int>>& grid) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
