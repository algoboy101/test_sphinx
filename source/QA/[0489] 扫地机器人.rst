[0489] 扫地机器人
=================

-  https://leetcode-cn.com/problems/robot-room-cleaner

题目描述
--------

.. raw:: html

   <p>

房间（用格栅表示）中有一个扫地机器人。格栅中的每一个格子有空和障碍物两种可能。

.. raw:: html

   </p>

.. raw:: html

   <p>

扫地机器人提供4个API，可以向前进，向左转或者向右转。每次转弯90度。

.. raw:: html

   </p>

.. raw:: html

   <p>

当扫地机器人试图进入障碍物格子时，它的碰撞传感器会探测出障碍物，使它停留在原地。

.. raw:: html

   </p>

.. raw:: html

   <p>

请利用提供的4个API编写让机器人清理整个房间的算法。

.. raw:: html

   </p>

.. raw:: html

   <pre>interface Robot {
   &nbsp; // 若下一个方格为空，则返回true，并移动至该方格
   &nbsp; // 若下一个方格为障碍物，则返回false，并停留在原地
   &nbsp; boolean move();

     // 在调用turnLeft/turnRight后机器人会停留在原位置
   &nbsp; // 每次转弯90度
   &nbsp; void turnLeft();
   &nbsp; void turnRight();

     // 清理所在方格
     void clean();
   }
   </pre>

.. raw:: html

   <p>

示例:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   room = [
     [1,1,1,1,1,0,1,1],
     [1,1,1,1,1,0,1,1],
     [1,0,1,1,1,1,1,1],
     [0,0,0,1,0,0,0,0],
     [1,1,1,1,1,1,1,1]
   ],
   row = 1,
   col = 3

   <strong>解析:</strong>
   房间格栅用0或1填充。0表示障碍物，1表示可以通过。
   机器人从row=1，col=3的初始位置出发。在左上角的一行以下，三列以右。
   </pre>

.. raw:: html

   <p>

注意:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>输入只用于初始化房间和机器人的位置。你需要&ldquo;盲解&rdquo;这个问题。换而言之，你必须在对房间和机器人位置一无所知的情况下，只使用4个给出的API解决问题。&nbsp;</li>
    <li>扫地机器人的初始位置一定是空地。</li>
    <li>扫地机器人的初始方向向上。</li>
    <li>所有可抵达的格子都是相连的，亦即所有标记为1的格子机器人都可以抵达。</li>
    <li>可以假定格栅的四周都被墙包围。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * // This is the robot's control interface.
     * // You should not implement it, or speculate about its implementation
     * class Robot {
     *   public:
     *     // Returns true if the cell in front is open and robot moves into the cell.
     *     // Returns false if the cell in front is blocked and robot stays in the current cell.
     *     bool move();
     *
     *     // Robot will stay in the same cell after calling turnLeft/turnRight.
     *     // Each turn will be 90 degrees.
     *     void turnLeft();
     *     void turnRight();
     *
     *     // Clean the current cell.
     *     void clean();
     * };
     */
    class Solution {
    public:
        void cleanRoom(Robot& robot) {
            
        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
