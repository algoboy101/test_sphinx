[1011] 在 D 天内送达包裹的能力
==============================

-  https://leetcode-cn.com/problems/capacity-to-ship-packages-within-d-days

题目描述
--------

.. raw:: html

   <p>

传送带上的包裹必须在 D 天内从一个港口运送到另一个港口。

.. raw:: html

   </p>

.. raw:: html

   <p>

传送带上的第
i 个包裹的重量为 weights[i]。每一天，我们都会按给出重量的顺序往传送带上装载包裹。我们装载的重量不会超过船的最大运载重量。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回能在 D 天内将传送带上的所有包裹送达的船的最低运载能力。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>weights = [1,2,3,4,5,6,7,8,9,10], D = 5
   <strong>输出：</strong>15
   <strong>解释：</strong>
   船舶最低载重 15 就能够在 5 天内送达所有包裹，如下所示：
   第 1 天：1, 2, 3, 4, 5
   第 2 天：6, 7
   第 3 天：8
   第 4 天：9
   第 5 天：10

   请注意，货物必须按照给定的顺序装运，因此使用载重能力为 14 的船舶并将包装分成 (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) 是不允许的。 
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>weights = [3,2,2,4,1,4], D = 3
   <strong>输出：</strong>6
   <strong>解释：</strong>
   船舶最低载重 6 就能够在 3 天内送达所有包裹，如下所示：
   第 1 天：3, 2
   第 2 天：2, 4
   第 3 天：1, 4
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>weights = [1,2,3,1,1], D = 4
   <strong>输出：</strong>3
   <strong>解释：</strong>
   第 1 天：1
   第 2 天：2
   第 3 天：3
   第 4 天：1, 1
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= D &lt;= weights.length &lt;= 50000</code></li>
    <li><code>1 &lt;= weights[i] &lt;= 500</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

数组

.. raw:: html

   </li>

.. raw:: html

   <li>

二分查找

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int shipWithinDays(vector<int>& weights, int D) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
