[1105] 填充书架
===============

-  https://leetcode-cn.com/problems/filling-bookcase-shelves

题目描述
--------

.. raw:: html

   <p>

附近的家居城促销，你买回了一直心仪的可调节书架，打算把自己的书都整理到新的书架上。

.. raw:: html

   </p>

.. raw:: html

   <p>

你把要摆放的书 books 都整理好，叠成一摞：从上往下，第 i 本书的厚度为
books[i][0]，高度为 books[i][1]。

.. raw:: html

   </p>

.. raw:: html

   <p>

按顺序 将这些书摆放到总宽度为 shelf\_width 的书架上。

.. raw:: html

   </p>

.. raw:: html

   <p>

先选几本书放在书架上（它们的厚度之和小于等于书架的宽度
shelf\_width），然后再建一层书架。重复这个过程，直到把所有的书都放在书架上。

.. raw:: html

   </p>

.. raw:: html

   <p>

需要注意的是，在上述过程的每个步骤中，摆放书的顺序与你整理好的顺序相同。
例如，如果这里有 5
本书，那么可能的一种摆放情况是：第一和第二本书放在第一层书架上，第三本书放在第二层书架上，第四和第五本书放在最后一层书架上。

.. raw:: html

   </p>

.. raw:: html

   <p>

每一层所摆放的书的最大高度就是这一层书架的层高，书架整体的高度为各层高之和。

.. raw:: html

   </p>

.. raw:: html

   <p>

以这种方式布置书架，返回书架整体可能的最小高度。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>books = [[1,1],[2,3],[2,3],[1,1],[1,1],[1,1],[1,2]], shelf_width = 4
   <strong>输出：</strong>6
   <strong>解释：</strong>
   3 层书架的高度和为 1 + 3 + 2 = 6 。
   第 2 本书不必放在第一层书架上。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= books.length &lt;= 1000</code></li>
    <li><code>1 &lt;= books[i][0] &lt;= shelf_width &lt;= 1000</code></li>
    <li><code>1 &lt;= books[i][1] &lt;= 1000</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int minHeightShelves(vector<vector<int>>& books, int shelf_width) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
