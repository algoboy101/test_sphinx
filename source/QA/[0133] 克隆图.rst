[0133] 克隆图
=============

-  https://leetcode-cn.com/problems/clone-graph

题目描述
--------

.. raw:: html

   <p>

给你无向 连通 图中一个节点的引用，请你返回该图的 深拷贝（克隆）。

.. raw:: html

   </p>

.. raw:: html

   <p>

图中的每个节点都包含它的值 val（int） 和其邻居的列表（list[Node]）。

.. raw:: html

   </p>

.. raw:: html

   <pre>class Node {
       public int val;
       public List&lt;Node&gt; neighbors;
   }</pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

测试用例格式：

.. raw:: html

   </p>

.. raw:: html

   <p>

简单起见，每个节点的值都和它的索引相同。例如，第一个节点值为
1，第二个节点值为 2，以此类推。该图在测试用例中使用邻接列表表示。

.. raw:: html

   </p>

.. raw:: html

   <p>

邻接列表是用于表示有限图的无序列表的集合。每个列表都描述了图中节点的邻居集。

.. raw:: html

   </p>

.. raw:: html

   <p>

给定节点将始终是图中的第一个节点（值为
1）。你必须将 给定节点的拷贝 作为对克隆图的引用返回。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>adjList = [[2,4],[1,3],[2,4],[1,3]]
   <strong>输出：</strong>[[2,4],[1,3],[2,4],[1,3]]
   <strong>解释：
   </strong>图中有 4 个节点。
   节点 1 的值是 1，它有两个邻居：节点 2 和 4 。
   节点 2 的值是 2，它有两个邻居：节点 1 和 3 。
   节点 3 的值是 3，它有两个邻居：节点 2 和 4 。
   节点 4 的值是 4，它有两个邻居：节点 1 和 3 。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>adjList = [[]]
   <strong>输出：</strong>[[]]
   <strong>解释：</strong>输入包含一个空列表。该图仅仅只有一个值为 1 的节点，它没有任何邻居。
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>adjList = []
   <strong>输出：</strong>[]
   <strong>解释：</strong>这个图是空的，它不含任何节点。
   </pre>

.. raw:: html

   <p>

示例 4：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>adjList = [[2],[1]]
   <strong>输出：</strong>[[2],[1]]</pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>节点数介于 1 到 100 之间。</li>
    <li>每个节点值都是唯一的。</li>
    <li>无向图是一个<a href="https://baike.baidu.com/item/简单图/1680528?fr=aladdin" target="_blank">简单图</a>，这意味着图中没有重复的边，也没有自环。</li>
    <li>由于图是无向的，如果节点 <em>p</em> 是节点 <em>q</em> 的邻居，那么节点 <em>q</em> 也必须是节点 <em>p</em>&nbsp;的邻居。</li>
    <li>图是连通图，你可以从给定节点访问到所有节点。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

广度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

图

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /*
    // Definition for a Node.
    class Node {
    public:
        int val;
        vector<Node*> neighbors;
        
        Node() {
            val = 0;
            neighbors = vector<Node*>();
        }
        
        Node(int _val) {
            val = _val;
            neighbors = vector<Node*>();
        }
        
        Node(int _val, vector<Node*> _neighbors) {
            val = _val;
            neighbors = _neighbors;
        }
    };
    */
    class Solution {
    public:
        Node* cloneGraph(Node* node) {
            
        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
