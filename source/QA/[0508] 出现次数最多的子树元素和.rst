[0508] 出现次数最多的子树元素和
===============================

-  https://leetcode-cn.com/problems/most-frequent-subtree-sum

题目描述
--------

.. raw:: html

   <p>

给出二叉树的根，找出出现次数最多的子树元素和。一个结点的子树元素和定义为以该结点为根的二叉树上所有结点的元素之和（包括结点本身）。然后求出出现次数最多的子树元素和。如果有多个元素出现的次数相同，返回所有出现次数最多的元素（不限顺序）。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1 输入:

.. raw:: html

   </p>

.. raw:: html

   <pre>  5
    /  \
   2   -3
   </pre>

.. raw:: html

   <p>

返回 [2, -3, 4]，所有的值均只出现一次，以任意顺序返回所有值。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 2 输入:

.. raw:: html

   </p>

.. raw:: html

   <pre>  5
    /  \
   2   -5
   </pre>

.. raw:: html

   <p>

返回 [2]，只有 2 出现两次，-5 只出现 1 次。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示： 假设任意子树元素和均可以用 32 位有符号整数表示。

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   <li>

哈希表

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        vector<int> findFrequentTreeSum(TreeNode* root) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
