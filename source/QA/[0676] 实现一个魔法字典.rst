[0676] 实现一个魔法字典
=======================

-  https://leetcode-cn.com/problems/implement-magic-dictionary

题目描述
--------

.. raw:: html

   <p>

实现一个带有buildDict, 以及 search方法的魔法字典。

.. raw:: html

   </p>

.. raw:: html

   <p>

对于buildDict方法，你将被给定一串不重复的单词来构建一个字典。

.. raw:: html

   </p>

.. raw:: html

   <p>

对于search方法，你将被给定一个单词，并且判定能否只将这个单词中一个字母换成另一个字母，使得所形成的新单词存在于你构建的字典中。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   Input: buildDict([&quot;hello&quot;, &quot;leetcode&quot;]), Output: Null
   Input: search(&quot;hello&quot;), Output: False
   Input: search(&quot;hhllo&quot;), Output: True
   Input: search(&quot;hell&quot;), Output: False
   Input: search(&quot;leetcoded&quot;), Output: False
   </pre>

.. raw:: html

   <p>

注意:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>你可以假设所有输入都是小写字母&nbsp;<code>a-z</code>。</li>
    <li>为了便于竞赛，测试所用的数据量很小。你可以在竞赛结束后，考虑更高效的算法。</li>
    <li>请记住<strong>重置</strong>MagicDictionary类中声明的类变量，因为静态/类变量会在多个测试用例中保留。 请参阅<a href="http://leetcode.com/faq/#different-output">这里</a>了解更多详情。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

字典树

.. raw:: html

   </li>

.. raw:: html

   <li>

哈希表

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class MagicDictionary {
    public:
        /** Initialize your data structure here. */
        MagicDictionary() {

        }
        
        /** Build a dictionary through a list of words */
        void buildDict(vector<string> dict) {

        }
        
        /** Returns if there is any word in the trie that equals to the given word after modifying exactly one character */
        bool search(string word) {

        }
    };

    /**
     * Your MagicDictionary object will be instantiated and called as such:
     * MagicDictionary* obj = new MagicDictionary();
     * obj->buildDict(dict);
     * bool param_2 = obj->search(word);
     */

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
