[0303] 区域和检索 - 数组不可变
==============================

-  https://leetcode-cn.com/problems/range-sum-query-immutable

题目描述
--------

.. raw:: html

   <p>

给定一个整数数组  nums，求出数组从索引 i 到 j  (i ≤ j)
范围内元素的总和，包含 i,  j 两点。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre>给定 nums = [-2, 0, 3, -5, 2, -1]，求和函数为 sumRange()

   sumRange(0, 2) -&gt; 1
   sumRange(2, 5) -&gt; -1
   sumRange(0, 5) -&gt; -3</pre>

.. raw:: html

   <p>

说明:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>你可以假设数组不可变。</li>
    <li>会多次调用&nbsp;<em>sumRange</em>&nbsp;方法。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class NumArray {
    public:
        NumArray(vector<int>& nums) {

        }
        
        int sumRange(int i, int j) {

        }
    };

    /**
     * Your NumArray object will be instantiated and called as such:
     * NumArray* obj = new NumArray(nums);
     * int param_1 = obj->sumRange(i,j);
     */

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
