[1240] 铺瓷砖
=============

-  https://leetcode-cn.com/problems/tiling-a-rectangle-with-the-fewest-squares

题目描述
--------

.. raw:: html

   <p>

你是一位施工队的工长，根据设计师的要求准备为一套设计风格独特的房子进行室内装修。

.. raw:: html

   </p>

.. raw:: html

   <p>

房子的客厅大小为 n x m，为保持极简的风格，需要使用尽可能少的 正方形
瓷砖来铺盖地面。

.. raw:: html

   </p>

.. raw:: html

   <p>

假设正方形瓷砖的规格不限，边长都是整数。

.. raw:: html

   </p>

.. raw:: html

   <p>

请你帮设计师计算一下，最少需要用到多少块方形瓷砖？

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>n = 2, m = 3
   <strong>输出：</strong>3
   <code><strong>解释：</strong>3</code> 块地砖就可以铺满卧室。
   <code>     2</code> 块 <code>1x1 地砖</code>
   <code>     1</code> 块 <code>2x2 地砖</code></pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>n = 5, m = 8
   <strong>输出：</strong>5
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>n = 11, m = 13
   <strong>输出：</strong>6
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= n &lt;= 13</code></li>
    <li><code>1 &lt;= m&nbsp;&lt;=&nbsp;13</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   <li>

回溯算法

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int tilingRectangle(int n, int m) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
