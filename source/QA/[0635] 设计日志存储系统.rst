[0635] 设计日志存储系统
=======================

-  https://leetcode-cn.com/problems/design-log-storage-system

题目描述
--------

.. raw:: html

   <p>

你将获得多条日志，每条日志都有唯一的 id 和 timestamp，timestamp 是形如
Year:Month:Day:Hour:Minute:Second 的字符串，例如
2017:01:01:23:59:59，所有值域都是零填充的十进制数。

.. raw:: html

   </p>

.. raw:: html

   <p>

设计一个日志存储系统实现如下功能：

.. raw:: html

   </p>

.. raw:: html

   <p>

void Put(int id, string timestamp)：给定日志的 id 和
timestamp，将这个日志存入你的存储系统中。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

int[] Retrieve(String start, String end, String
granularity)：返回在给定时间区间内的所有日志的 id。start 、 end 和
timestamp 的格式相同，granularity 表示考虑的时间级。比如，start =
"2017:01:01:23:59:59", end = "2017:01:02:23:59:59", granularity = "Day"
代表区间 2017 年 1 月 1 日到 2017 年 1 月 2 日。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

样例 1 ：

.. raw:: html

   </p>

.. raw:: html

   <pre>put(1, &quot;2017:01:01:23:59:59&quot;);
   put(2, &quot;2017:01:01:22:59:59&quot;);
   put(3, &quot;2016:01:01:00:00:00&quot;);
   retrieve(&quot;2016:01:01:01:01:01&quot;,&quot;2017:01:01:23:00:00&quot;,&quot;Year&quot;); // 返回值 [1,2,3]，返回从 2016 年到 2017 年所有的日志。
   retrieve(&quot;2016:01:01:01:01:01&quot;,&quot;2017:01:01:23:00:00&quot;,&quot;Hour&quot;); // 返回值 [1,2], 返回从 2016:01:01:01 到 2017:01:01:23 区间内的日志，日志 3 不在区间内。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

注释 ：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>Put 和 Retrieve 的指令总数不超过 300。</li>
    <li>年份的区间是 [2000,2017]，小时的区间是&nbsp;[00,23]。</li>
    <li>Retrieve 的输出顺序不作要求。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

设计

.. raw:: html

   </li>

.. raw:: html

   <li>

字符串

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class LogSystem {
    public:
        LogSystem() {

        }
        
        void put(int id, string timestamp) {

        }
        
        vector<int> retrieve(string s, string e, string gra) {

        }
    };

    /**
     * Your LogSystem object will be instantiated and called as such:
     * LogSystem* obj = new LogSystem();
     * obj->put(id,timestamp);
     * vector<int> param_2 = obj->retrieve(s,e,gra);
     */

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
