[0759] 员工空闲时间
===================

-  https://leetcode-cn.com/problems/employee-free-time

题目描述
--------

.. raw:: html

   <p>

给定员工的 schedule 列表，表示每个员工的工作时间。

.. raw:: html

   </p>

.. raw:: html

   <p>

每个员工都有一个非重叠的时间段  Intervals 列表，这些时间段已经排好序。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回表示 所有 员工的 共同，正数长度的空闲时间
的有限时间段的列表，同样需要排好序。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>schedule = [[[1,2],[5,6]],[[1,3]],[[4,10]]]
   <strong>输出：</strong>[[3,4]]
   <strong>解释：</strong>
   共有 3 个员工，并且所有共同的
   空间时间段是 [-inf, 1], [3, 4], [10, inf]。
   我们去除所有包含 inf 的时间段，因为它们不是有限的时间段。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>schedule = [[[1,3],[6,7]],[[2,4]],[[2,5],[9,12]]]
   <strong>输出：</strong>[[5,6],[7,9]]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

（尽管我们用 [x, y] 的形式表示 Intervals ，内部的对象是 Intervals
而不是列表或数组。例如，schedule[0][0].start = 1, schedule[0][0].end =
2，并且 schedule[0][0][0] 是未定义的）

.. raw:: html

   </p>

.. raw:: html

   <p>

而且，答案中不包含 [5, 5] ，因为长度为 0。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

注：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>schedule</code> 和&nbsp;<code>schedule[i]</code>&nbsp;为长度范围在&nbsp;<code>[1, 50]</code>的列表。</li>
    <li><code>0 &lt;= schedule[i].start &lt; schedule[i].end &lt;= 10^8</code>。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

注：输入类型于 2019 年 4 月 15 日
改变。请重置为默认代码的定义以获取新方法。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

堆

.. raw:: html

   </li>

.. raw:: html

   <li>

贪心算法

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /*
    // Definition for an Interval.
    class Interval {
    public:
        int start;
        int end;

        Interval() {}

        Interval(int _start, int _end) {
            start = _start;
            end = _end;
        }
    };
    */
    class Solution {
    public:
        vector<Interval> employeeFreeTime(vector<vector<Interval>> schedule) {
            
        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
