[0621] 任务调度器
=================

-  https://leetcode-cn.com/problems/task-scheduler

题目描述
--------

.. raw:: html

   <p>

给定一个用字符数组表示的 CPU 需要执行的任务列表。其中包含使用大写的 A -
Z 字母表示的26
种不同种类的任务。任务可以以任意顺序执行，并且每个任务都可以在 1
个单位时间内执行完。CPU
在任何一个单位时间内都可以执行一个任务，或者在待命状态。

.. raw:: html

   </p>

.. raw:: html

   <p>

然而，两个相同种类的任务之间必须有长度为 n 的冷却时间，因此至少有连续 n
个单位时间内 CPU 在执行不同的任务，或者在待命状态。

.. raw:: html

   </p>

.. raw:: html

   <p>

你需要计算完成所有任务所需要的最短时间。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入:</strong> tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;B&quot;,&quot;B&quot;], n = 2
   <strong>输出:</strong> 8
   <strong>执行顺序:</strong> A -&gt; B -&gt; (待命) -&gt; A -&gt; B -&gt; (待命) -&gt; A -&gt; B.
   </pre>

.. raw:: html

   <p>

注：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>任务的总个数为&nbsp;[1, 10000]。</li>
    <li>n 的取值范围为 [0, 100]。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

贪心算法

.. raw:: html

   </li>

.. raw:: html

   <li>

队列

.. raw:: html

   </li>

.. raw:: html

   <li>

数组

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int leastInterval(vector<char>& tasks, int n) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
