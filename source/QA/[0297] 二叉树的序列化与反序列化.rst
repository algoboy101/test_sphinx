[0297] 二叉树的序列化与反序列化
===============================

-  https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree

题目描述
--------

.. raw:: html

   <p>

序列化是将一个数据结构或者对象转换为连续的比特位的操作，进而可以将转换后的数据存储在一个文件或者内存中，同时也可以通过网络传输到另一个计算机环境，采取相反方式重构得到原数据。

.. raw:: html

   </p>

.. raw:: html

   <p>

请设计一个算法来实现二叉树的序列化与反序列化。这里不限定你的序列 /
反序列化算法执行逻辑，你只需要保证一个二叉树可以被序列化为一个字符串并且将这个字符串反序列化为原始的树结构。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例: 

.. raw:: html

   </p>

.. raw:: html

   <pre>你可以将以下二叉树：

       1
      / \
     2   3
        / \
       4   5

   序列化为 <code>&quot;[1,2,3,null,null,4,5]&quot;</code></pre>

.. raw:: html

   <p>

提示: 这与 LeetCode 目前使用的方式一致，详情请参阅 LeetCode
序列化二叉树的格式。你并非必须采取这种方式，你也可以采用其他的方法解决这个问题。

.. raw:: html

   </p>

.. raw:: html

   <p>

说明: 不要使用类的成员 / 全局 /
静态变量来存储状态，你的序列化和反序列化算法应该是无状态的。

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   <li>

设计

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Codec {
    public:

        // Encodes a tree to a single string.
        string serialize(TreeNode* root) {
            
        }

        // Decodes your encoded data to tree.
        TreeNode* deserialize(string data) {
            
        }
    };

    // Your Codec object will be instantiated and called as such:
    // Codec codec;
    // codec.deserialize(codec.serialize(root));

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
