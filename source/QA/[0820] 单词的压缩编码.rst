[0820] 单词的压缩编码
=====================

-  https://leetcode-cn.com/problems/short-encoding-of-words

题目描述
--------

.. raw:: html

   <p>

给定一个单词列表，我们将这个列表编码成一个索引字符串 S 与一个索引列表
A。

.. raw:: html

   </p>

.. raw:: html

   <p>

例如，如果这个列表是 ["time", "me", "bell"]，我们就可以将其表示为 S =
"time#bell#" 和 indexes = [0, 2, 5]。

.. raw:: html

   </p>

.. raw:: html

   <p>

对于每一个索引，我们可以通过从字符串 S 中索引的位置开始读取字符串，直到
"#" 结束，来恢复我们之前的单词列表。

.. raw:: html

   </p>

.. raw:: html

   <p>

那么成功对给定单词列表进行编码的最小字符串长度是多少呢？

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> words = <code>[&quot;time&quot;, &quot;me&quot;, &quot;bell&quot;]</code>
   <strong>输出:</strong> 10
   <strong>说明:</strong> S = <code>&quot;time#bell#&quot; ， indexes = [0, 2, 5</code>] 。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= words.length&nbsp;&lt;= 2000</code></li>
    <li><code>1 &lt;=&nbsp;words[i].length&nbsp;&lt;= 7</code></li>
    <li>每个单词都是小写字母 。</li>

.. raw:: html

   </ol>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int minimumLengthEncoding(vector<string>& words) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
