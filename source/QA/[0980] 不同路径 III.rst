[0980] 不同路径 III
===================

-  https://leetcode-cn.com/problems/unique-paths-iii

题目描述
--------

.. raw:: html

   <p>

在二维网格 grid 上，有 4 种类型的方格：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1</code> 表示起始方格。且只有一个起始方格。</li>
    <li><code>2</code> 表示结束方格，且只有一个结束方格。</li>
    <li><code>0</code> 表示我们可以走过的空方格。</li>
    <li><code>-1</code> 表示我们无法跨越的障碍。</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

返回在四个方向（上、下、左、右）上行走时，从起始方格到结束方格的不同路径的数目，每一个无障碍方格都要通过一次。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[1,0,0,0],[0,0,0,0],[0,0,2,-1]]
   <strong>输出：</strong>2
   <strong>解释：</strong>我们有以下两条路径：
   1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2)
   2. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2)</pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[1,0,0,0],[0,0,0,0],[0,0,0,2]]
   <strong>输出：</strong>4
   <strong>解释：</strong>我们有以下四条路径： 
   1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2),(2,3)
   2. (0,0),(0,1),(1,1),(1,0),(2,0),(2,1),(2,2),(1,2),(0,2),(0,3),(1,3),(2,3)
   3. (0,0),(1,0),(2,0),(2,1),(2,2),(1,2),(1,1),(0,1),(0,2),(0,3),(1,3),(2,3)
   4. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2),(2,3)</pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[0,1],[2,0]]
   <strong>输出：</strong>0
   <strong>解释：</strong>
   没有一条路能完全穿过每一个空的方格一次。
   请注意，起始和结束方格可以位于网格中的任意位置。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= grid.length * grid[0].length &lt;= 20</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

回溯算法

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int uniquePathsIII(vector<vector<int>>& grid) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
