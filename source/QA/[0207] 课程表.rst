[0207] 课程表
=============

-  https://leetcode-cn.com/problems/course-schedule

题目描述
--------

.. raw:: html

   <p>

现在你总共有 n 门课需要选，记为 0 到 n-1。

.. raw:: html

   </p>

.. raw:: html

   <p>

在选修某些课程之前需要一些先修课程。 例如，想要学习课程 0
，你需要先完成课程 1 ，我们用一个匹配来表示他们: [0,1]

.. raw:: html

   </p>

.. raw:: html

   <p>

给定课程总量以及它们的先决条件，判断是否可能完成所有课程的学习？

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> 2, [[1,0]] 
   <strong>输出: </strong>true
   <strong>解释:</strong>&nbsp;总共有 2 门课程。学习课程 1 之前，你需要完成课程 0。所以这是可能的。</pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> 2, [[1,0],[0,1]]
   <strong>输出: </strong>false
   <strong>解释:</strong>&nbsp;总共有 2 门课程。学习课程 1 之前，你需要先完成​课程 0；并且学习课程 0 之前，你还应先完成课程 1。这是不可能的。</pre>

.. raw:: html

   <p>

说明:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>输入的先决条件是由<strong>边缘列表</strong>表示的图形，而不是邻接矩阵。详情请参见<a href="http://blog.csdn.net/woaidapaopao/article/details/51732947" target="_blank">图的表示法</a>。</li>
    <li>你可以假定输入的先决条件中没有重复的边。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

提示:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>这个问题相当于查找一个循环是否存在于有向图中。如果存在循环，则不存在拓扑排序，因此不可能选取所有课程进行学习。</li>
    <li><a href="https://www.coursera.org/specializations/algorithms" target="_blank">通过 DFS 进行拓扑排序</a> - 一个关于Coursera的精彩视频教程（21分钟），介绍拓扑排序的基本概念。</li>
    <li>
    <p>拓扑排序也可以通过&nbsp;<a href="https://baike.baidu.com/item/%E5%AE%BD%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/5224802?fr=aladdin&amp;fromid=2148012&amp;fromtitle=%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2" target="_blank">BFS</a>&nbsp;完成。</p>
    </li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

广度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

图

.. raw:: html

   </li>

.. raw:: html

   <li>

拓扑排序

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
