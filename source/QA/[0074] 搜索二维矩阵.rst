[0074] 搜索二维矩阵
===================

-  https://leetcode-cn.com/problems/search-a-2d-matrix

题目描述
--------

.. raw:: html

   <p>

编写一个高效的算法来判断 m x
n 矩阵中，是否存在一个目标值。该矩阵具有如下特性：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>每行中的整数从左到右按升序排列。</li>
    <li>每行的第一个整数大于前一行的最后一个整数。</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   matrix = [
     [1,   3,  5,  7],
     [10, 11, 16, 20],
     [23, 30, 34, 50]
   ]
   target = 3
   <strong>输出:</strong> true
   </pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   matrix = [
     [1,   3,  5,  7],
     [10, 11, 16, 20],
     [23, 30, 34, 50]
   ]
   target = 13
   <strong>输出:</strong> false</pre>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

数组

.. raw:: html

   </li>

.. raw:: html

   <li>

二分查找

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        bool searchMatrix(vector<vector<int>>& matrix, int target) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
