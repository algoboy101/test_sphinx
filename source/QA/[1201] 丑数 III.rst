[1201] 丑数 III
===============

-  https://leetcode-cn.com/problems/ugly-number-iii

题目描述
--------

.. raw:: html

   <p>

请你帮忙设计一个程序，用来找出第 n 个丑数。

.. raw:: html

   </p>

.. raw:: html

   <p>

丑数是可以被 a 或 b 或 c 整除的 正整数。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>n = 3, a = 2, b = 3, c = 5
   <strong>输出：</strong>4
   <strong>解释：</strong>丑数序列为 2, 3, 4, 5, 6, 8, 9, 10... 其中第 3 个是 4。</pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>n = 4, a = 2, b = 3, c = 4
   <strong>输出：</strong>6
   <strong>解释：</strong>丑数序列为 2, 3, 4, 6, 8, 9, 12... 其中第 4 个是 6。
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>n = 5, a = 2, b = 11, c = 13
   <strong>输出：</strong>10
   <strong>解释：</strong>丑数序列为 2, 4, 6, 8, 10, 11, 12, 13... 其中第 5 个是 10。
   </pre>

.. raw:: html

   <p>

示例 4：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>n = 1000000000, a = 2, b = 217983653, c = 336916467
   <strong>输出：</strong>1999999984
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= n, a, b, c &lt;= 10^9</code></li>
    <li><code>1 &lt;= a * b * c &lt;= 10^18</code></li>
    <li>本题结果在&nbsp;<code>[1,&nbsp;2 * 10^9]</code>&nbsp;的范围内</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

数学

.. raw:: html

   </li>

.. raw:: html

   <li>

二分查找

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int nthUglyNumber(int n, int a, int b, int c) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
