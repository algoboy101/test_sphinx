[0854] 相似度为 K 的字符串
==========================

-  https://leetcode-cn.com/problems/k-similar-strings

题目描述
--------

.. raw:: html

   <p>

如果可以通过将 A 中的两个小写字母精确地交换位置 K 次得到与 B
相等的字符串，我们称字符串 A 和 B 的相似度为 K（K 为非负整数）。

.. raw:: html

   </p>

.. raw:: html

   <p>

给定两个字母异位词 A 和 B ，返回 A 和 B 的相似度 K 的最小值。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>A = &quot;ab&quot;, B = &quot;ba&quot;
   <strong>输出：</strong>1
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>A = &quot;abc&quot;, B = &quot;bca&quot;
   <strong>输出：</strong>2
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>A = &quot;abac&quot;, B = &quot;baca&quot;
   <strong>输出：</strong>2
   </pre>

.. raw:: html

   <p>

示例 4：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>A = &quot;aabc&quot;, B = &quot;abca&quot;
   <strong>输出：</strong>2</pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= A.length == B.length &lt;= 20</code></li>
    <li><code>A</code>&nbsp;和&nbsp;<code>B</code>&nbsp;只包含集合&nbsp;<code>{&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;}</code>&nbsp;中的小写字母。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

广度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

图

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int kSimilarity(string A, string B) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
