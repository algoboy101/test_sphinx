[0338] 比特位计数
=================

-  https://leetcode-cn.com/problems/counting-bits

题目描述
--------

.. raw:: html

   <p>

给定一个非负整数 num。对于 0 ≤ i ≤ num
范围中的每个数字 i ，计算其二进制数中的 1 的数目并将它们作为数组返回。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入: </strong>2
   <strong>输出: </strong>[0,1,1]</pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入: </strong>5
   <strong>输出: </strong><code>[0,1,1,2,1,2]</code></pre>

.. raw:: html

   <p>

进阶:

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>给出时间复杂度为<strong>O(n*sizeof(integer))</strong>的解答非常容易。但你可以在线性时间<strong>O(n)</strong>内用一趟扫描做到吗？</li>
    <li>要求算法的空间复杂度为<strong>O(n)</strong>。</li>
    <li>你能进一步完善解法吗？要求在C++或任何其他语言中不使用任何内置函数（如 C++ 中的&nbsp;<strong>__builtin_popcount</strong>）来执行此操作。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

位运算

.. raw:: html

   </li>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<int> countBits(int num) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
