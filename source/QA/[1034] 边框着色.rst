[1034] 边框着色
===============

-  https://leetcode-cn.com/problems/coloring-a-border

题目描述
--------

.. raw:: html

   <p>

给出一个二维整数网格 grid，网格中的每个值表示该位置处的网格块的颜色。

.. raw:: html

   </p>

.. raw:: html

   <p>

只有当两个网格块的颜色相同，而且在四个方向中任意一个方向上相邻时，它们属于同一连通分量。

.. raw:: html

   </p>

.. raw:: html

   <p>

连通分量的边界是指连通分量中的所有与不在分量中的正方形相邻（四个方向上）的所有正方形，或者在网格的边界上（第一行/列或最后一行/列）的所有正方形。

.. raw:: html

   </p>

.. raw:: html

   <p>

给出位于 (r0,
c0) 的网格块和颜色 color，使用指定颜色 color 为所给网格块的连通分量的边界进行着色，并返回最终的网格 grid
。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>grid = [[1,1],[1,2]], r0 = 0, c0 = 0, color = 3
   <strong>输出：</strong>[[3, 3], [3, 2]]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>grid = [[1,2,2],[2,3,2]], r0 = 0, c0 = 1, color = 3
   <strong>输出：</strong>[[1, 3, 3], [2, 3, 3]]
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>grid = [[1,1,1],[1,1,1],[1,1,1]], r0 = 1, c0 = 1, color = 2
   <strong>输出：</strong>[[2, 2, 2], [2, 1, 2], [2, 2, 2]]</pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= grid.length &lt;= 50</code></li>
    <li><code>1 &lt;= grid[0].length &lt;= 50</code></li>
    <li><code>1 &lt;= grid[i][j] &lt;= 1000</code></li>
    <li><code>0 &lt;= r0 &lt; grid.length</code></li>
    <li><code>0 &lt;= c0 &lt; grid[0].length</code></li>
    <li><code>1 &lt;= color &lt;= 1000</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<vector<int>> colorBorder(vector<vector<int>>& grid, int r0, int c0, int color) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
