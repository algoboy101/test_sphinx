[0904] 水果成篮
===============

-  https://leetcode-cn.com/problems/fruit-into-baskets

题目描述
--------

.. raw:: html

   <p>

在一排树中，第 i 棵树产生 tree[i] 型的水果。
你可以从你选择的任何树开始，然后重复执行以下步骤：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>把这棵树上的水果放进你的篮子里。如果你做不到，就停下来。</li>
    <li>移动到当前树右侧的下一棵树。如果右边没有树，就停下来。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

请注意，在选择一颗树后，你没有任何选择：你必须执行步骤 1，然后执行步骤
2，然后返回步骤 1，然后执行步骤 2，依此类推，直至停止。

.. raw:: html

   </p>

.. raw:: html

   <p>

你有两个篮子，每个篮子可以携带任何数量的水果，但你希望每个篮子只携带一种类型的水果。
用这个程序你能收集的水果总量是多少？

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[1,2,1]
   <strong>输出：</strong>3
   <strong>解释：</strong>我们可以收集 [1,2,1]。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[0,1,2,2]
   <strong>输出：</strong>3
   <strong>解释：</strong>我们可以收集 [1,2,2].
   如果我们从第一棵树开始，我们将只能收集到 [0, 1]。
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[1,2,3,2,2]
   <strong>输出：</strong>4
   <strong>解释：</strong>我们可以收集 [2,3,2,2].
   如果我们从第一棵树开始，我们将只能收集到 [1, 2]。
   </pre>

.. raw:: html

   <p>

示例 4：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[3,3,3,1,2,1,1,2,3,3,4]
   <strong>输出：</strong>5
   <strong>解释：</strong>我们可以收集 [1,2,1,1,2].
   如果我们从第一棵树或第八棵树开始，我们将只能收集到 4 个水果。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= tree.length &lt;= 40000</code></li>
    <li><code>0 &lt;= tree[i] &lt; tree.length</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

双指针

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int totalFruit(vector<int>& tree) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
