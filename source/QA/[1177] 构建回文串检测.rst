[1177] 构建回文串检测
=====================

-  https://leetcode-cn.com/problems/can-make-palindrome-from-substring

题目描述
--------

.. raw:: html

   <p>

给你一个字符串 s，请你对 s 的子串进行检测。

.. raw:: html

   </p>

.. raw:: html

   <p>

每次检测，待检子串都可以表示为 queries[i] = [left, right, k]。我们可以
重新排列 子串 s[left], ..., s[right]，并从中选择 最多
k 项替换成任何小写英文字母。 

.. raw:: html

   </p>

.. raw:: html

   <p>

如果在上述检测过程中，子串可以变成回文形式的字符串，那么检测结果为 true，否则结果为 false。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回答案数组 answer[]，其中 answer[i] 是第 i 个待检子串 queries[i] 的检测结果。

.. raw:: html

   </p>

.. raw:: html

   <p>

注意：在替换时，子串中的每个字母都必须作为 独立的
项进行计数，也就是说，如果 s[left..right] = "aaa" 且 k =
2，我们只能替换其中的两个字母。（另外，任何检测都不会修改原始字符串
s，可以认为每次检测都是独立的）

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>s = &quot;abcda&quot;, queries = [[3,3,0],[1,2,0],[0,3,1],[0,3,2],[0,4,1]]
   <strong>输出：</strong>[true,false,false,true,true]
   <strong>解释：</strong>
   queries[0] : 子串 = &quot;d&quot;，回文。
   queries[1] :&nbsp;子串 = &quot;bc&quot;，不是回文。
   queries[2] :&nbsp;子串 = &quot;abcd&quot;，只替换 1 个字符是变不成回文串的。
   queries[3] :&nbsp;子串 = &quot;abcd&quot;，可以变成回文的 &quot;abba&quot;。 也可以变成 &quot;baab&quot;，先重新排序变成 &quot;bacd&quot;，然后把 &quot;cd&quot; 替换为 &quot;ab&quot;。
   queries[4] :&nbsp;子串 = &quot;abcda&quot;，可以变成回文的 &quot;abcba&quot;。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= s.length,&nbsp;queries.length&nbsp;&lt;= 10^5</code></li>
    <li><code>0 &lt;= queries[i][0] &lt;= queries[i][1] &lt;&nbsp;s.length</code></li>
    <li><code>0 &lt;= queries[i][2] &lt;= s.length</code></li>
    <li><code>s</code> 中只有小写英文字母</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

数组

.. raw:: html

   </li>

.. raw:: html

   <li>

字符串

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<bool> canMakePaliQueries(string s, vector<vector<int>>& queries) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
