[0490] 迷宫
===========

-  https://leetcode-cn.com/problems/the-maze

题目描述
--------

.. raw:: html

   <p>

由空地和墙组成的迷宫中有一个球。球可以向上下左右四个方向滚动，但在遇到墙壁前不会停止滚动。当球停下时，可以选择下一个方向。

.. raw:: html

   </p>

.. raw:: html

   <p>

给定球的起始位置，目的地和迷宫，判断球能否在目的地停下。

.. raw:: html

   </p>

.. raw:: html

   <p>

迷宫由一个0和1的二维数组表示。
1表示墙壁，0表示空地。你可以假定迷宫的边缘都是墙壁。起始位置和目的地的坐标通过行号和列号给出。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入 1:</strong> 迷宫由以下二维数组表示

   0 0 1 0 0
   0 0 0 0 0
   0 0 0 1 0
   1 1 0 1 1
   0 0 0 0 0

   <strong>输入 2:</strong> 起始位置坐标 (rowStart, colStart) = (0, 4)
   <strong>输入 3:</strong> 目的地坐标 (rowDest, colDest) = (4, 4)

   <strong>输出:</strong> true

   <strong>解析:</strong> 一个可能的路径是 : 左 -&gt; 下 -&gt; 左 -&gt; 下 -&gt; 右 -&gt; 下 -&gt; 右。
   <img src="https://raw.githubusercontent.com/algoboy101/LeetCodeCrowdsource/master/imgs/maze_1_example_1.png" style="width: 100%;">
   </pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入 1:</strong> 迷宫由以下二维数组表示

   0 0 1 0 0
   0 0 0 0 0
   0 0 0 1 0
   1 1 0 1 1
   0 0 0 0 0

   <strong>输入 2:</strong> 起始位置坐标 (rowStart, colStart) = (0, 4)
   <strong>输入 3:</strong> 目的地坐标 (rowDest, colDest) = (3, 2)

   <strong>输出:</strong> false

   <strong>解析:</strong> 没有能够使球停在目的地的路径。
   <img src="https://raw.githubusercontent.com/algoboy101/LeetCodeCrowdsource/master/imgs/maze_1_example_2.png" style="width: 100%;">
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

注意:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>迷宫中只有一个球和一个目的地。</li>
    <li>球和目的地都在空地上，且初始时它们不在同一位置。</li>
    <li>给定的迷宫不包括边界 (如图中的红色矩形), 但你可以假设迷宫的边缘都是墙壁。</li>
    <li>迷宫至少包括2块空地，行数和列数均不超过100。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

广度优先搜索

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        bool hasPath(vector<vector<int>>& maze, vector<int>& start, vector<int>& destination) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
