[0295] 数据流的中位数
=====================

-  https://leetcode-cn.com/problems/find-median-from-data-stream

题目描述
--------

.. raw:: html

   <p>

中位数是有序列表中间的数。如果列表长度是偶数，中位数则是中间两个数的平均值。

.. raw:: html

   </p>

.. raw:: html

   <p>

例如，

.. raw:: html

   </p>

.. raw:: html

   <p>

[2,3,4] 的中位数是 3

.. raw:: html

   </p>

.. raw:: html

   <p>

[2,3] 的中位数是 (2 + 3) / 2 = 2.5

.. raw:: html

   </p>

.. raw:: html

   <p>

设计一个支持以下两种操作的数据结构：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>void addNum(int num) - 从数据流中添加一个整数到数据结构中。</li>
    <li>double findMedian() - 返回目前所有元素的中位数。</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre>addNum(1)
   addNum(2)
   findMedian() -&gt; 1.5
   addNum(3) 
   findMedian() -&gt; 2</pre>

.. raw:: html

   <p>

进阶:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>如果数据流中所有整数都在 0 到 100 范围内，你将如何优化你的算法？</li>
    <li>如果数据流中 99% 的整数都在 0 到 100 范围内，你将如何优化你的算法？</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

堆

.. raw:: html

   </li>

.. raw:: html

   <li>

设计

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class MedianFinder {
    public:
        /** initialize your data structure here. */
        MedianFinder() {

        }
        
        void addNum(int num) {

        }
        
        double findMedian() {

        }
    };

    /**
     * Your MedianFinder object will be instantiated and called as such:
     * MedianFinder* obj = new MedianFinder();
     * obj->addNum(num);
     * double param_2 = obj->findMedian();
     */

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
