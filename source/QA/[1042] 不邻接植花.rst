[1042] 不邻接植花
=================

-  https://leetcode-cn.com/problems/flower-planting-with-no-adjacent

题目描述
--------

.. raw:: html

   <p>

有 N 个花园，按从 1 到 N 标记。在每个花园中，你打算种下四种花之一。

.. raw:: html

   </p>

.. raw:: html

   <p>

paths[i] = [x, y] 描述了花园 x 到花园 y 的双向路径。

.. raw:: html

   </p>

.. raw:: html

   <p>

另外，没有花园有 3 条以上的路径可以进入或者离开。

.. raw:: html

   </p>

.. raw:: html

   <p>

你需要为每个花园选择一种花，使得通过路径相连的任何两个花园中的花的种类互不相同。

.. raw:: html

   </p>

.. raw:: html

   <p>

以数组形式返回选择的方案作为答案 answer，其中 answer[i] 为在第 (i+1) 个花园中种植的花的种类。花的种类用
 1, 2, 3, 4 表示。保证存在答案。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>N = 3, paths = [[1,2],[2,3],[3,1]]
   <strong>输出：</strong>[1,2,3]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>N = 4, paths = [[1,2],[3,4]]
   <strong>输出：</strong>[1,2,1,2]
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>N = 4, paths = [[1,2],[2,3],[3,4],[4,1],[1,3],[2,4]]
   <strong>输出：</strong>[1,2,3,4]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= N &lt;= 10000</code></li>
    <li><code>0 &lt;= paths.size &lt;= 20000</code></li>
    <li>不存在花园有 4 条或者更多路径可以进入或离开。</li>
    <li>保证存在答案。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

图

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<int> gardenNoAdj(int N, vector<vector<int>>& paths) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
