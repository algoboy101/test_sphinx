[1209] 删除字符串中的所有相邻重复项 II
======================================

-  https://leetcode-cn.com/problems/remove-all-adjacent-duplicates-in-string-ii

题目描述
--------

.. raw:: html

   <p>

给你一个字符串 s，「k 倍重复项删除操作」将会从
s 中选择 k 个相邻且相等的字母，并删除它们，使被删去的字符串的左侧和右侧连在一起。

.. raw:: html

   </p>

.. raw:: html

   <p>

你需要对 s 重复进行无限次这样的删除操作，直到无法继续为止。

.. raw:: html

   </p>

.. raw:: html

   <p>

在执行完所有删除操作后，返回最终得到的字符串。

.. raw:: html

   </p>

.. raw:: html

   <p>

本题答案保证唯一。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>s = &quot;abcd&quot;, k = 2
   <strong>输出：</strong>&quot;abcd&quot;
   <strong>解释：</strong>没有要删除的内容。</pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>s = &quot;deeedbbcccbdaa&quot;, k = 3
   <strong>输出：</strong>&quot;aa&quot;
   <strong>解释： 
   </strong>先删除 &quot;eee&quot; 和 &quot;ccc&quot;，得到 &quot;ddbbbdaa&quot;
   再删除 &quot;bbb&quot;，得到 &quot;dddaa&quot;
   最后删除 &quot;ddd&quot;，得到 &quot;aa&quot;</pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>s = &quot;pbbcggttciiippooaais&quot;, k = 2
   <strong>输出：</strong>&quot;ps&quot;
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= s.length &lt;= 10^5</code></li>
    <li><code>2 &lt;= k &lt;= 10^4</code></li>
    <li><code>s</code>&nbsp;中只含有小写英文字母。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

栈

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        string removeDuplicates(string s, int k) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
