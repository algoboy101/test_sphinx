[0752] 打开转盘锁
=================

-  https://leetcode-cn.com/problems/open-the-lock

题目描述
--------

.. raw:: html

   <p>

你有一个带有四个圆形拨轮的转盘锁。每个拨轮都有10个数字： '0', '1', '2',
'3', '4', '5', '6', '7', '8', '9' 。每个拨轮可以自由旋转：例如把 '9'
变为  '0'，'0' 变为 '9' 。每次旋转都只能旋转一个拨轮的一位数字。

.. raw:: html

   </p>

.. raw:: html

   <p>

锁的初始数字为 '0000' ，一个代表四个拨轮的数字的字符串。

.. raw:: html

   </p>

.. raw:: html

   <p>

列表 deadends
包含了一组死亡数字，一旦拨轮的数字和列表里的任何一个元素相同，这个锁将会被永久锁定，无法再被旋转。

.. raw:: html

   </p>

.. raw:: html

   <p>

字符串 target
代表可以解锁的数字，你需要给出最小的旋转次数，如果无论如何不能解锁，返回
-1。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入：</strong>deadends = [&quot;0201&quot;,&quot;0101&quot;,&quot;0102&quot;,&quot;1212&quot;,&quot;2002&quot;], target = &quot;0202&quot;
   <strong>输出：</strong>6
   <strong>解释：</strong>
   可能的移动序列为 &quot;0000&quot; -&gt; &quot;1000&quot; -&gt; &quot;1100&quot; -&gt; &quot;1200&quot; -&gt; &quot;1201&quot; -&gt; &quot;1202&quot; -&gt; &quot;0202&quot;。
   注意 &quot;0000&quot; -&gt; &quot;0001&quot; -&gt; &quot;0002&quot; -&gt; &quot;0102&quot; -&gt; &quot;0202&quot; 这样的序列是不能解锁的，
   因为当拨动到 &quot;0102&quot; 时这个锁就会被锁定。
   </pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入:</strong> deadends = [&quot;8888&quot;], target = &quot;0009&quot;
   <strong>输出：</strong>1
   <strong>解释：</strong>
   把最后一位反向旋转一次即可 &quot;0000&quot; -&gt; &quot;0009&quot;。
   </pre>

.. raw:: html

   <p>

示例 3:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入:</strong> deadends = [&quot;8887&quot;,&quot;8889&quot;,&quot;8878&quot;,&quot;8898&quot;,&quot;8788&quot;,&quot;8988&quot;,&quot;7888&quot;,&quot;9888&quot;], target = &quot;8888&quot;
   <strong>输出：</strong>-1
   <strong>解释：
   </strong>无法旋转到目标数字且不被锁定。
   </pre>

.. raw:: html

   <p>

示例 4:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入:</strong> deadends = [&quot;0000&quot;], target = &quot;8888&quot;
   <strong>输出：</strong>-1
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>死亡列表 <code>deadends</code> 的长度范围为 <code>[1, 500]</code>。</li>
    <li>目标数字 <code>target</code> 不会在 <code>deadends</code> 之中。</li>
    <li>每个 <code>deadends</code> 和 <code>target</code> 中的字符串的数字会在 10,000 个可能的情况 <code>&#39;0000&#39;</code> 到 <code>&#39;9999&#39;</code> 中产生。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

广度优先搜索

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int openLock(vector<string>& deadends, string target) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
