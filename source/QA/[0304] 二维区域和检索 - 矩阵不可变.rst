[0304] 二维区域和检索 - 矩阵不可变
==================================

-  https://leetcode-cn.com/problems/range-sum-query-2d-immutable

题目描述
--------

.. raw:: html

   <p>

给定一个二维矩阵，计算其子矩形范围内元素的总和，该子矩阵的左上角为
(row1, col1) ，右下角为 (row2, col2)。

.. raw:: html

   </p>

.. raw:: html

   <p>

 上图子矩阵左上角 (row1, col1) = (2, 1) ，右下角(row2, col2) = (4,
3)，该子矩形内元素的总和为 8。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例:

.. raw:: html

   </p>

.. raw:: html

   <pre>给定 matrix = [
     [3, 0, 1, 4, 2],
     [5, 6, 3, 2, 1],
     [1, 2, 0, 1, 5],
     [4, 1, 0, 1, 7],
     [1, 0, 3, 0, 5]
   ]

   sumRegion(2, 1, 4, 3) -&gt; 8
   sumRegion(1, 1, 2, 2) -&gt; 11
   sumRegion(1, 2, 2, 4) -&gt; 12
   </pre>

.. raw:: html

   <p>

说明:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>你可以假设矩阵不可变。</li>
    <li>会多次调用&nbsp;<em>sumRegion&nbsp;</em>方法<em>。</em></li>
    <li>你可以假设&nbsp;<em>row</em>1 &le; <em>row</em>2 且&nbsp;<em>col</em>1 &le; <em>col</em>2。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class NumMatrix {
    public:
        NumMatrix(vector<vector<int>>& matrix) {

        }
        
        int sumRegion(int row1, int col1, int row2, int col2) {

        }
    };

    /**
     * Your NumMatrix object will be instantiated and called as such:
     * NumMatrix* obj = new NumMatrix(matrix);
     * int param_1 = obj->sumRegion(row1,col1,row2,col2);
     */

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
