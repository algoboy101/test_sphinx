[0586] 订单最多的客户
=====================

-  https://leetcode-cn.com/problems/customer-placing-the-largest-number-of-orders

题目描述
--------

.. raw:: html

   <p>

在表 orders 中找到订单数最多客户对应的 customer\_number 。

.. raw:: html

   </p>

.. raw:: html

   <p>

数据保证订单数最多的顾客恰好只有一位。

.. raw:: html

   </p>

.. raw:: html

   <p>

表 orders 定义如下：

.. raw:: html

   </p>

.. raw:: html

   <pre>| Column            | Type      |
   |-------------------|-----------|
   | order_number (PK) | int       |
   | customer_number   | int       |
   | order_date        | date      |
   | required_date     | date      |
   | shipped_date      | date      |
   | status            | char(15)  |
   | comment           | char(200) |
   </pre>

.. raw:: html

   <p>

样例输入

.. raw:: html

   </p>

.. raw:: html

   <pre>| order_number | customer_number | order_date | required_date | shipped_date | status | comment |
   |--------------|-----------------|------------|---------------|--------------|--------|---------|
   | 1            | 1               | 2017-04-09 | 2017-04-13    | 2017-04-12   | Closed |         |
   | 2            | 2               | 2017-04-15 | 2017-04-20    | 2017-04-18   | Closed |         |
   | 3            | 3               | 2017-04-16 | 2017-04-25    | 2017-04-20   | Closed |         |
   | 4            | 3               | 2017-04-18 | 2017-04-28    | 2017-04-25   | Closed |         |
   </pre>

.. raw:: html

   <p>

样例输出

.. raw:: html

   </p>

.. raw:: html

   <pre>| customer_number |
   |-----------------|
   | 3               |
   </pre>

.. raw:: html

   <p>

解释

.. raw:: html

   </p>

.. raw:: html

   <pre>customer_number 为 &#39;3&#39; 的顾客有两个订单，比顾客 &#39;1&#39; 或者 &#39;2&#39; 都要多，因为他们只有一个订单
   所以结果是该顾客的 customer_number ，也就是 3 。
   </pre>

.. raw:: html

   <p>

进阶： 如果有多位顾客订单数并列最多，你能找到他们所有的 customer\_number
吗？

.. raw:: html

   </p>

题目代码
--------

.. code:: cpp

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
