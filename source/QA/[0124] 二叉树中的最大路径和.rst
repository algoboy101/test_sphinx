[0124] 二叉树中的最大路径和
===========================

-  https://leetcode-cn.com/problems/binary-tree-maximum-path-sum

题目描述
--------

.. raw:: html

   <p>

给定一个非空二叉树，返回其最大路径和。

.. raw:: html

   </p>

.. raw:: html

   <p>

本题中，路径被定义为一条从树中任意节点出发，达到任意节点的序列。该路径至少包含一个节点，且不一定经过根节点。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> [1,2,3]

          <strong>1</strong>
         <strong>/ \</strong>
        <strong>2</strong>   <strong>3</strong>

   <strong>输出:</strong> 6
   </pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> [-10,9,20,null,null,15,7]

   &nbsp;  -10
   &nbsp; &nbsp;/ \
   &nbsp; 9 &nbsp;<strong>20</strong>
   &nbsp; &nbsp; <strong>/ &nbsp;\</strong>
   &nbsp; &nbsp;<strong>15 &nbsp; 7</strong>

   <strong>输出:</strong> 42</pre>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        int maxPathSum(TreeNode* root) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
