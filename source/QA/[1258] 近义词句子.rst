[1258] 近义词句子
=================

-  https://leetcode-cn.com/problems/synonymous-sentences

题目描述
--------

.. raw:: html

   <p>

给你一个近义词表 synonyms 和一个句子 text ， synonyms 表中是一些近义词对
，你可以将句子 text 中每个单词用它的近义词来替换。

.. raw:: html

   </p>

.. raw:: html

   <p>

请你找出所有用近义词替换后的句子，按 字典序排序 后返回。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入：
   </strong>synonyms = [[&quot;happy&quot;,&quot;joy&quot;],[&quot;sad&quot;,&quot;sorrow&quot;],[&quot;joy&quot;,&quot;cheerful&quot;]],
   text = &quot;I am happy today but was sad yesterday&quot;
   <strong>输出：
   </strong>[&quot;I am cheerful today but was sad yesterday&quot;,
   &quot;I am cheerful today but was sorrow yesterday&quot;,
   &quot;I am happy today but was sad yesterday&quot;,
   &quot;I am happy today but was sorrow yesterday&quot;,
   &quot;I am joy today but was sad yesterday&quot;,
   &quot;I am joy today but was sorrow yesterday&quot;]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>0 &lt;=&nbsp;synonyms.length &lt;= 10</code></li>
    <li><code>synonyms[i].length == 2</code></li>
    <li><code>synonyms[0] != synonyms[1]</code></li>
    <li>所有单词仅包含英文字母，且长度最多为&nbsp;<code>10</code> 。</li>
    <li><code>text</code>&nbsp;最多包含&nbsp;<code>10</code> 个单词，且单词间用单个空格分隔开。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

回溯算法

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<string> generateSentences(vector<vector<string>>& synonyms, string text) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
