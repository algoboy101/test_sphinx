[0955] 删列造序 II
==================

-  https://leetcode-cn.com/problems/delete-columns-to-make-sorted-ii

题目描述
--------

.. raw:: html

   <p>

给定由 N 个小写字母字符串组成的数组 A，其中每个字符串长度相等。

.. raw:: html

   </p>

.. raw:: html

   <p>

选取一个删除索引序列，对于 A 中的每个字符串，删除对应每个索引处的字符。

.. raw:: html

   </p>

.. raw:: html

   <p>

比如，有 A = ["abcdef", "uvwxyz"]，删除索引序列 {0, 2,
3}，删除后 A 为["bef", "vyz"]。

.. raw:: html

   </p>

.. raw:: html

   <p>

假设，我们选择了一组删除索引 D，那么在执行删除操作之后，最终得到的数组的元素是按
字典序（A[0] <= A[1] <= A[2] ... <= A[A.length -
1]）排列的，然后请你返回 D.length 的最小可能值。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <ol>

.. raw:: html

   </ol>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[&quot;ca&quot;,&quot;bb&quot;,&quot;ac&quot;]
   <strong>输出：</strong>1
   <strong>解释： </strong>
   删除第一列后，A = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]。
   现在 A 中元素是按字典排列的 (即，A[0] &lt;= A[1] &lt;= A[2])。
   我们至少需要进行 1 次删除，因为最初 A 不是按字典序排列的，所以答案是 1。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[&quot;xc&quot;,&quot;yb&quot;,&quot;za&quot;]
   <strong>输出：</strong>0
   <strong>解释：</strong>
   A 的列已经是按字典序排列了，所以我们不需要删除任何东西。
   注意 A 的行不需要按字典序排列。
   也就是说，A[0][0] &lt;= A[0][1] &lt;= ... 不一定成立。
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[&quot;zyx&quot;,&quot;wvu&quot;,&quot;tsr&quot;]
   <strong>输出：</strong>3
   <strong>解释：</strong>
   我们必须删掉每一列。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= A.length &lt;= 100</code></li>
    <li><code>1 &lt;= A[i].length &lt;= 100</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

贪心算法

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int minDeletionSize(vector<string>& A) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
