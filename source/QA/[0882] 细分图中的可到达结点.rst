[0882] 细分图中的可到达结点
===========================

-  https://leetcode-cn.com/problems/reachable-nodes-in-subdivided-graph

题目描述
--------

.. raw:: html

   <p>

从具有 0 到 N-1 的结点的无向图（“原始图”）开始，对一些边进行细分。

.. raw:: html

   </p>

.. raw:: html

   <p>

该图给出如下：edges[k] 是整数对 (i, j, n) 组成的列表，使 (i, j)
是原始图的边。

.. raw:: html

   </p>

.. raw:: html

   <p>

n 是该边上新结点的总数

.. raw:: html

   </p>

.. raw:: html

   <p>

然后，将边 (i, j) 从原始图中删除，将 n 个新结点 (x\_1, x\_2, ...,
x\_n) 添加到原始图中，

.. raw:: html

   </p>

.. raw:: html

   <p>

将 n+1 条新边 (i, x\_1), (x\_1, x\_2), (x\_2, x\_3), ..., (x\_{n-1},
x\_n), (x\_n, j) 添加到原始图中。

.. raw:: html

   </p>

.. raw:: html

   <p>

现在，你将从原始图中的结点 0 处出发，并且每次移动，你都将沿着一条边行进。

.. raw:: html

   </p>

.. raw:: html

   <p>

返回最多 M 次移动可以达到的结点数。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong><code>edges </code>= [[0,1,10],[0,2,1],[1,2,2]], M = 6, N = 3
   <strong>输出：</strong>13
   <strong>解释：</strong>
   在 M = 6 次移动之后在最终图中可到达的结点如下所示。
   <img alt="" src="https://raw.githubusercontent.com/algoboy101/LeetCodeCrowdsource/master/imgs/origfinal.png" style="height: 200px; width: 487px;">
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong><code>edges </code>= [[0,1,4],[1,2,6],[0,2,8],[1,3,1]], M = 10, N = 4
   <strong>输出：</strong>23</pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>0 &lt;= edges.length &lt;= 10000</code></li>
    <li><code>0 &lt;= edges[i][0] &lt;&nbsp;edges[i][1] &lt; N</code></li>
    <li>不存在任何&nbsp;<code>i != j</code>&nbsp;情况下&nbsp;<code>edges[i][0] == edges[j][0]</code>&nbsp;且&nbsp;<code>edges[i][1] == edges[j][1]</code>.</li>
    <li>原始图没有平行的边。</li>
    <li><code>0 &lt;= edges[i][2] &lt;= 10000</code></li>
    <li><code>0 &lt;= M &lt;= 10^9</code></li>
    <li><code>1 &lt;= N &lt;= 3000</code></li>
    <li>可到达结点是可以从结点 <code>0</code> 开始使用最多 <code>M</code> 次移动到达的结点。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

堆

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int reachableNodes(vector<vector<int>>& edges, int M, int N) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
