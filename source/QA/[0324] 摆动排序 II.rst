[0324] 摆动排序 II
==================

-  https://leetcode-cn.com/problems/wiggle-sort-ii

题目描述
--------

.. raw:: html

   <p>

给定一个无序的数组 nums，将它重新排列成 nums[0] < nums[1] > nums[2] <
nums[3]... 的顺序。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入: </strong><code>nums = [1, 5, 1, 1, 6, 4]</code>
   <strong>输出: </strong>一个可能的答案是 <code>[1, 4, 1, 5, 1, 6]</code></pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入: </strong><code>nums = [1, 3, 2, 2, 3, 1]</code>
   <strong>输出:</strong> 一个可能的答案是 <code>[2, 3, 1, 3, 1, 2]</code></pre>

.. raw:: html

   <p>

说明: 你可以假设所有输入都会得到有效的结果。

.. raw:: html

   </p>

.. raw:: html

   <p>

进阶: 你能用 O(n) 时间复杂度和 / 或原地 O(1) 额外空间来实现吗？

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

排序

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        void wiggleSort(vector<int>& nums) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
