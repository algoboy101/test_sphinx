[1246] 删除回文子数组
=====================

-  https://leetcode-cn.com/problems/palindrome-removal

题目描述
--------

.. raw:: html

   <p>

给你一个整数数组 arr，每一次操作你都可以选择并删除它的一个 回文
子数组 arr[i], arr[i+1], ..., arr[j]（ i <= j）。

.. raw:: html

   </p>

.. raw:: html

   <p>

注意，每当你删除掉一个子数组，右侧元素都会自行向前移动填补空位。

.. raw:: html

   </p>

.. raw:: html

   <p>

请你计算并返回从数组中删除所有数字所需的最少操作次数。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>arr = [1,2]
   <strong>输出：</strong>2
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>arr = [1,3,4,1,5]
   <strong>输出：</strong>3
   <strong>解释：</strong>先删除 [4]，然后删除 [1,3,1]，最后再删除 [5]。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= arr.length &lt;= 100</code></li>
    <li><code>1 &lt;= arr[i] &lt;= 20</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int minimumMoves(vector<int>& arr) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
