[0563] 二叉树的坡度
===================

-  https://leetcode-cn.com/problems/binary-tree-tilt

题目描述
--------

.. raw:: html

   <p>

给定一个二叉树，计算整个树的坡度。

.. raw:: html

   </p>

.. raw:: html

   <p>

一个树的节点的坡度定义即为，该节点左子树的结点之和和右子树结点之和的差的绝对值。空结点的的坡度是0。

.. raw:: html

   </p>

.. raw:: html

   <p>

整个树的坡度就是其所有节点的坡度之和。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例:

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入:</strong> 
            1
          /   \
         2     3
   <strong>输出:</strong> 1
   <strong>解释:</strong> 
   结点的坡度 2 : 0
   结点的坡度 3 : 0
   结点的坡度 1 : |2-3| = 1
   树的坡度 : 0 + 0 + 1 = 1
   </pre>

.. raw:: html

   <p>

注意:

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>任何子树的结点的和不会超过32位整数的范围。</li>
    <li>坡度的值不会超过32位整数的范围。</li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        int findTilt(TreeNode* root) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
