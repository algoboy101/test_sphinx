[0951] 翻转等价二叉树
=====================

-  https://leetcode-cn.com/problems/flip-equivalent-binary-trees

题目描述
--------

.. raw:: html

   <p>

我们可以为二叉树 T
定义一个翻转操作，如下所示：选择任意节点，然后交换它的左子树和右子树。

.. raw:: html

   </p>

.. raw:: html

   <p>

只要经过一定次数的翻转操作后，能使 X 等于 Y，我们就称二叉树 X
翻转等价于二叉树 Y。

.. raw:: html

   </p>

.. raw:: html

   <p>

编写一个判断两个二叉树是否是翻转等价的函数。这些树由根节点 root1 和
root2 给出。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>root1 = [1,2,3,4,5,6,null,null,null,7,8], root2 = [1,3,2,null,6,4,5,null,null,null,null,8,7]
   <strong>输出：</strong>true
   <strong>解释：</strong>We flipped at nodes with values 1, 3, and 5.
   <img alt="Flipped Trees Diagram" src="https://raw.githubusercontent.com/algoboy101/LeetCodeCrowdsource/master/imgs/tree_ex.png" style="">
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>每棵树最多有&nbsp;<code>100</code>&nbsp;个节点。</li>
    <li>每棵树中的每个值都是唯一的、在 <code>[0, 99]</code>&nbsp;范围内的整数。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        bool flipEquiv(TreeNode* root1, TreeNode* root2) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
