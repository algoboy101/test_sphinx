[1059] 从始点到终点的所有路径
=============================

-  https://leetcode-cn.com/problems/all-paths-from-source-lead-to-destination

题目描述
--------

.. raw:: html

   <p>

给定有向图的边 edges，以及该图的始点 source 和目标终点 destination，确定从始点 source 出发的所有路径是否最终结束于目标终点 destination，即：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>从始点&nbsp;<code>source</code> 到目标终点&nbsp;<code>destination</code> 存在至少一条路径</li>
    <li>如果存在从始点&nbsp;<code>source</code> 到没有出边的节点的路径，则该节点就是路径终点。</li>
    <li>从始点<code>source</code>到目标终点&nbsp;<code>destination</code> 可能路径数是有限数字</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

当从始点 source 出发的所有路径都可以到达目标终点 destination
时返回 true，否则返回 false。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>n = 3, edges = [[0,1],[0,2]], source = 0, destination = 2
   <strong>输出：</strong>false
   <strong>说明：</strong>节点 1 和节点 2 都可以到达，但也会卡在那里。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>n = 4, edges = [[0,1],[0,3],[1,2],[2,1]], source = 0, destination = 3
   <strong>输出：</strong>false
   <strong>说明：</strong>有两种可能：在节点 3 处结束，或是在节点 1 和节点 2 之间无限循环。
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>n = 4, edges = [[0,1],[0,2],[1,3],[2,3]], source = 0, destination = 3
   <strong>输出：</strong>true
   </pre>

.. raw:: html

   <p>

示例 4：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>n = 3, edges = [[0,1],[1,1],[1,2]], source = 0, destination = 2
   <strong>输出：</strong>false
   <strong>说明：</strong>从始点出发的所有路径都在目标终点结束，但存在无限多的路径，如 0-1-2，0-1-1-2，0-1-1-1-2，0-1-1-1-1-2 等。
   </pre>

.. raw:: html

   <p>

示例 5：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>n = 2, edges = [[0,1],[1,1]], source = 0, destination = 1
   <strong>输出：</strong>false
   <strong>说明：</strong>在目标节点上存在无限的自环。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>给定的图中可能带有自环和平行边。</li>
    <li>图中的节点数&nbsp;<code>n</code>&nbsp;介于&nbsp;<code>1</code> 和&nbsp;<code>10000</code>&nbsp;之间。</li>
    <li>图中的边数在&nbsp;<code>0</code> 到&nbsp;<code>10000</code>&nbsp;之间。</li>
    <li><code>0 &lt;= edges.length &lt;= 10000</code></li>
    <li><code>edges[i].length == 2</code></li>
    <li><code>0 &lt;= source &lt;= n - 1</code></li>
    <li><code>0 &lt;= destination &lt;= n - 1</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

图

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        bool leadsToDestination(int n, vector<vector<int>>& edges, int source, int destination) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
