[1162] 地图分析
===============

-  https://leetcode-cn.com/problems/as-far-from-land-as-possible

题目描述
--------

.. raw:: html

   <p>

你现在手里有一份大小为 N x N
的『地图』（网格） grid，上面的每个『区域』（单元格）都用 0 和 1 标记好了。其中 0 代表海洋，1 代表陆地，你知道距离陆地区域最远的海洋区域是是哪一个吗？请返回该海洋区域到离它最近的陆地区域的距离。

.. raw:: html

   </p>

.. raw:: html

   <p>

我们这里说的距离是『曼哈顿距离』（ Manhattan Distance）：(x0, y0)
和 (x1, y1) 这两个区域之间的距离是 \|x0 - x1\| + \|y0 - y1\| 。

.. raw:: html

   </p>

.. raw:: html

   <p>

如果我们的地图上只有陆地或者海洋，请返回 -1。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[1,0,1],[0,0,0],[1,0,1]]
   <strong>输出：</strong>2
   <strong>解释： </strong>
   海洋区域 (1, 1) 和所有陆地区域之间的距离都达到最大，最大距离为 2。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <p>

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>[[1,0,0],[0,0,0],[0,0,0]]
   <strong>输出：</strong>4
   <strong>解释： </strong>
   海洋区域 (2, 2) 和所有陆地区域之间的距离都达到最大，最大距离为 4。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt;= grid.length == grid[0].length&nbsp;&lt;= 100</code></li>
    <li><code>grid[i][j]</code>&nbsp;不是&nbsp;<code>0</code>&nbsp;就是&nbsp;<code>1</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

广度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

图

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int maxDistance(vector<vector<int>>& grid) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
