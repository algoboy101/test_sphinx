[0126] 单词接龙 II
==================

-  https://leetcode-cn.com/problems/word-ladder-ii

题目描述
--------

.. raw:: html

   <p>

给定两个单词（beginWord 和 endWord）和一个字典 wordList，找出所有从
beginWord 到 endWord 的最短转换序列。转换需遵循如下规则：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>每次转换只能改变一个字母。</li>
    <li>转换过程中的中间单词必须是字典中的单词。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

说明:

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>如果不存在这样的转换序列，返回一个空列表。</li>
    <li>所有单词具有相同的长度。</li>
    <li>所有单词只由小写字母组成。</li>
    <li>字典中不存在重复的单词。</li>
    <li>你可以假设 <em>beginWord</em> 和 <em>endWord </em>是非空的，且二者不相同。</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

示例 1:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   beginWord = &quot;hit&quot;,
   endWord = &quot;cog&quot;,
   wordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]

   <strong>输出:</strong>
   [
     [&quot;hit&quot;,&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;cog&quot;],
   &nbsp; [&quot;hit&quot;,&quot;hot&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]
   ]
   </pre>

.. raw:: html

   <p>

示例 2:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   beginWord = &quot;hit&quot;
   endWord = &quot;cog&quot;
   wordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]

   <strong>输出: </strong>[]

   <strong>解释:</strong>&nbsp;<em>endWord</em> &quot;cog&quot; 不在字典中，所以不存在符合要求的转换序列。</pre>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

广度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

数组

.. raw:: html

   </li>

.. raw:: html

   <li>

字符串

.. raw:: html

   </li>

.. raw:: html

   <li>

回溯算法

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<vector<string>> findLadders(string beginWord, string endWord, vector<string>& wordList) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
