[1130] 叶值的最小代价生成树
===========================

-  https://leetcode-cn.com/problems/minimum-cost-tree-from-leaf-values

题目描述
--------

.. raw:: html

   <p>

给你一个正整数数组 arr，考虑所有满足以下条件的二叉树：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li>每个节点都有 0 个或是 2 个子节点。</li>
    <li>数组&nbsp;<code>arr</code>&nbsp;中的值与树的中序遍历中每个叶节点的值一一对应。（知识回顾：如果一个节点有 0 个子节点，那么该节点为叶节点。）</li>
    <li>每个非叶节点的值等于其左子树和右子树中叶节点的最大值的乘积。</li>

.. raw:: html

   </ul>

.. raw:: html

   <p>

在所有这样的二叉树中，返回每个非叶节点的值的最小可能总和。这个和的值是一个 32
位整数。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>arr = [6,2,4]
   <strong>输出：</strong>32
   <strong>解释：</strong>
   有两种可能的树，第一种的非叶节点的总和为 36，第二种非叶节点的总和为 32。

       24            24
      /  \          /  \
     12   4        6    8
    /  \               / \
   6    2             2   4</pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>2 &lt;= arr.length &lt;= 40</code></li>
    <li><code>1 &lt;= arr[i] &lt;= 15</code></li>
    <li>答案保证是一个 32 位带符号整数，即小于&nbsp;<code>2^31</code>。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

栈

.. raw:: html

   </li>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int mctFromLeafValues(vector<int>& arr) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
