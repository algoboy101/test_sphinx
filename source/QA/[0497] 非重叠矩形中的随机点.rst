[0497] 非重叠矩形中的随机点
===========================

-  https://leetcode-cn.com/problems/random-point-in-non-overlapping-rectangles

题目描述
--------

.. raw:: html

   <p>

给定一个非重叠轴对齐矩形的列表 rects，写一个函数 pick
随机均匀地选取矩形覆盖的空间中的整数点。

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><strong>整数点</strong>是具有整数坐标的点。</li>
    <li>矩形周边上的点包含在矩形覆盖的空间中。</li>
    <li>第 <code>i</code> 个矩形 <code>rects [i] = [x1，y1，x2，y2]</code>，其中&nbsp;<code>[x1，y1]</code> 是左下角的整数坐标，<code>[x2，y2]</code> 是右上角的整数坐标。</li>
    <li>每个矩形的长度和宽度不超过 2000。</li>
    <li><code>1 &lt;= rects.length&nbsp;&lt;= 100</code></li>
    <li><code>pick</code> 以整数坐标数组&nbsp;<code>[p_x, p_y]</code>&nbsp;的形式返回一个点。</li>
    <li><code>pick</code> 最多被调用10000次。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入: 
   </strong>[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]
   [[[[1,1,5,5]]],[],[],[]]
   <strong>输出: 
   </strong>[null,[4,1],[4,1],[3,3]]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre>
   <strong>输入: 
   </strong>[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]
   [[[[-2,-2,-1,-1],[1,0,3,0]]],[],[],[],[],[]]
   <strong>输出: 
   </strong>[null,[-1,-2],[2,0],[-2,-1],[3,0],[-2,-2]]</pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

输入语法的说明：

.. raw:: html

   </p>

.. raw:: html

   <p>

输入是两个列表：调用的子例程及其参数。Solution
的构造函数有一个参数，即矩形数组 rects。pick
没有参数。参数总是用列表包装的，即使没有也是如此。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

二分查找

.. raw:: html

   </li>

.. raw:: html

   <li>

Random

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        Solution(vector<vector<int>>& rects) {

        }
        
        vector<int> pick() {

        }
    };

    /**
     * Your Solution object will be instantiated and called as such:
     * Solution* obj = new Solution(rects);
     * vector<int> param_1 = obj->pick();
     */

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
