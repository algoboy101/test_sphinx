[1229] 安排会议日程
===================

-  https://leetcode-cn.com/problems/meeting-scheduler

题目描述
--------

.. raw:: html

   <p>

你是一名行政助理，手里有两位客户的空闲时间表：slots1 和
slots2，以及会议的预计持续时间 duration，请你为他们安排合适的会议时间。

.. raw:: html

   </p>

.. raw:: html

   <p>

「会议时间」是两位客户都有空参加，并且持续时间能够满足预计时间 duration
的 最早的时间间隔。

.. raw:: html

   </p>

.. raw:: html

   <p>

如果没有满足要求的会议时间，就请返回一个 空数组。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

「空闲时间」的格式是 [start,
end]，由开始时间 start 和结束时间 end 组成，表示从 start 开始，到
end 结束。 

.. raw:: html

   </p>

.. raw:: html

   <p>

题目保证数据有效：同一个人的空闲时间不会出现交叠的情况，也就是说，对于同一个人的两个空闲时间 [start1,
end1] 和 [start2, end2]，要么 start1 > end2，要么 start2 > end1。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>slots1 = [[10,50],[60,120],[140,210]], slots2 = [[0,15],[60,70]], duration = 8
   <strong>输出：</strong>[60,68]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>slots1 = [[10,50],[60,120],[140,210]], slots2 = [[0,15],[60,70]], duration = 12
   <strong>输出：</strong>[]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= slots1.length, slots2.length &lt;= 10^4</code></li>
    <li><code>slots1[i].length, slots2[i].length == 2</code></li>
    <li><code>slots1[i][0] &lt; slots1[i][1]</code></li>
    <li><code>slots2[i][0] &lt; slots2[i][1]</code></li>
    <li><code>0 &lt;= slots1[i][j], slots2[i][j] &lt;= 10^9</code></li>
    <li><code>1 &lt;= duration &lt;= 10^6&nbsp;</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

Line Sweep

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<int> minAvailableDuration(vector<vector<int>>& slots1, vector<vector<int>>& slots2, int duration) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
