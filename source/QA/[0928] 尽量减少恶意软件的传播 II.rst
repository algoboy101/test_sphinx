[0928] 尽量减少恶意软件的传播 II
================================

-  https://leetcode-cn.com/problems/minimize-malware-spread-ii

题目描述
--------

.. raw:: html

   <p>

(这个问题与 尽量减少恶意软件的传播 是一样的，不同之处用粗体表示。)

.. raw:: html

   </p>

.. raw:: html

   <p>

在节点网络中，只有当 graph[i][j] =
1 时，每个节点 i 能够直接连接到另一个节点 j。

.. raw:: html

   </p>

.. raw:: html

   <p>

一些节点 initial 最初被恶意软件感染。只要两个节点直接连接，且其中至少一个节点受到恶意软件的感染，那么两个节点都将被恶意软件感染。这种恶意软件的传播将继续，直到没有更多的节点可以被这种方式感染。

.. raw:: html

   </p>

.. raw:: html

   <p>

假设 M(initial) 是在恶意软件停止传播之后，整个网络中感染恶意软件的最终节点数。

.. raw:: html

   </p>

.. raw:: html

   <p>

我们可以从初始列表中删除一个节点，并完全移除该节点以及从该节点到任何其他节点的任何连接。如果移除这一节点将最小化 M(initial)， 则返回该节点。如果有多个节点满足条件，就返回索引最小的节点。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <ol>

.. raw:: html

   </ol>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输出：</strong>graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]
   <strong>输入：</strong>0
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>graph = [[1,1,0],[1,1,1],[0,1,1]], initial = [0,1]
   <strong>输出：</strong>1
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>graph = [[1,1,0,0],[1,1,1,0],[0,1,1,1],[0,0,1,1]], initial = [0,1]
   <strong>输出：</strong>1
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li><code>1 &lt; graph.length = graph[0].length &lt;= 300</code></li>
    <li><code>0 &lt;= graph[i][j] == graph[j][i] &lt;= 1</code></li>
    <li><code>graph[i][i] = 1</code></li>
    <li><code>1 &lt;= initial.length &lt; graph.length</code></li>
    <li><code>0 &lt;= initial[i] &lt; graph.length</code></li>

.. raw:: html

   </ol>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   <li>

并查集

.. raw:: html

   </li>

.. raw:: html

   <li>

图

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
