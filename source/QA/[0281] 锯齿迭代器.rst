[0281] 锯齿迭代器
=================

-  https://leetcode-cn.com/problems/zigzag-iterator

题目描述
--------

.. raw:: html

   <p>

给出两个一维的向量，请你实现一个迭代器，交替返回它们中间的元素。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   v1 = [1,2]
   v2 = [3,4,5,6] 

   <strong>输出:</strong> <code>[1,3,2,4,5,6]

   <strong>解析:</strong></code>&nbsp;通过连续调用 <em>next</em> 函数直到 <em>hasNext</em> 函数返回 <code>false，</code>
   &nbsp;    <em>next</em> 函数返回值的次序应依次为: <code>[1,3,2,4,5,6]。</code></pre>

.. raw:: html

   <p>

拓展：假如给你 k 个一维向量呢？你的代码在这种情况下的扩展性又会如何呢?

.. raw:: html

   </p>

.. raw:: html

   <p>

拓展声明：  “锯齿” 顺序对于 k >
2 的情况定义可能会有些歧义。所以，假如你觉得 “锯齿”
这个表述不妥，也可以认为这是一种 “循环”。例如：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong>
   [1,2,3]
   [4,5,6,7]
   [8,9]

   <strong>输出: </strong><code>[1,4,8,2,5,9,3,6,7]</code>.
   </pre>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

设计

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class ZigzagIterator {
    public:
        ZigzagIterator(vector<int>& v1, vector<int>& v2) {
            
        }

        int next() {
            
        }

        bool hasNext() {
            
        }
    };

    /**
     * Your ZigzagIterator object will be instantiated and called as such:
     * ZigzagIterator i(v1, v2);
     * while (i.hasNext()) cout << i.next();
     */

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
