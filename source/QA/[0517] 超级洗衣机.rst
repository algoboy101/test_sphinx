[0517] 超级洗衣机
=================

-  https://leetcode-cn.com/problems/super-washing-machines

题目描述
--------

.. raw:: html

   <p>

假设有
n 台超级洗衣机放在同一排上。开始的时候，每台洗衣机内可能有一定量的衣服，也可能是空的。

.. raw:: html

   </p>

.. raw:: html

   <p>

在每一步操作中，你可以选择任意 m （1 ≤ m ≤
n） 台洗衣机，与此同时将每台洗衣机的一件衣服送到相邻的一台洗衣机。

.. raw:: html

   </p>

.. raw:: html

   <p>

给定一个非负整数数组代表从左至右每台洗衣机中的衣物数量，请给出能让所有洗衣机中剩下的衣物的数量相等的最少的操作步数。如果不能使每台洗衣机中衣物的数量相等，则返回
-1。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> [1,0,5]

   <strong>输出:</strong> 3

   <strong>解释:</strong> 
   第一步:    1     0 &lt;-- 5    =&gt;    1     1     4
   第二步:    1 &lt;-- 1 &lt;-- 4    =&gt;    2     1     3    
   第三步:    2     1 &lt;-- 3    =&gt;    2     2     2   
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> [0,3,0]

   <strong>输出:</strong> 2

   <strong>解释:</strong> 
   第一步:    0 &lt;-- 3     0    =&gt;    1     2     0    
   第二步:    1     2 --&gt; 0    =&gt;    1     1     1     
   </pre>

.. raw:: html

   <p>

示例 3:

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入:</strong> [0,2,0]

   <strong>输出:</strong> -1

   <strong>解释:</strong> 
   不可能让所有三个洗衣机同时剩下相同数量的衣物。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ol>

::

    <li>n 的范围是 [1, 10000]。</li>
    <li>在每台超级洗衣机中，衣物数量的范围是 [0, 1e5]。</li>

.. raw:: html

   </ol>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

数学

.. raw:: html

   </li>

.. raw:: html

   <li>

动态规划

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int findMinMoves(vector<int>& machines) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
