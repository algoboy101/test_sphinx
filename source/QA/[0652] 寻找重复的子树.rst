[0652] 寻找重复的子树
=====================

-  https://leetcode-cn.com/problems/find-duplicate-subtrees

题目描述
--------

.. raw:: html

   <p>

给定一棵二叉树，返回所有重复的子树。对于同一类的重复子树，你只需要返回其中任意一棵的根结点即可。

.. raw:: html

   </p>

.. raw:: html

   <p>

两棵树重复是指它们具有相同的结构以及相同的结点值。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre>        1
          / \
         2   3
        /   / \
       4   2   4
          /
         4
   </pre>

.. raw:: html

   <p>

下面是两个重复的子树：

.. raw:: html

   </p>

.. raw:: html

   <pre>      2
        /
       4
   </pre>

.. raw:: html

   <p>

和

.. raw:: html

   </p>

.. raw:: html

   <pre>    4
   </pre>

.. raw:: html

   <p>

因此，你需要以列表的形式返回上述重复子树的根结点。

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        vector<TreeNode*> findDuplicateSubtrees(TreeNode* root) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
