[0112] 路径总和
===============

-  https://leetcode-cn.com/problems/path-sum

题目描述
--------

.. raw:: html

   <p>

给定一个二叉树和一个目标和，判断该树中是否存在根节点到叶子节点的路径，这条路径上所有节点值相加等于目标和。

.. raw:: html

   </p>

.. raw:: html

   <p>

说明: 叶子节点是指没有子节点的节点。

.. raw:: html

   </p>

.. raw:: html

   <p>

示例:  给定如下二叉树，以及目标和 sum = 22，

.. raw:: html

   </p>

.. raw:: html

   <pre>              <strong>5</strong>
                / \
               <strong>4 </strong>  8
              /   / \
             <strong>11 </strong> 13  4
            /  \      \
           7    <strong>2</strong>      1
   </pre>

.. raw:: html

   <p>

返回 true, 因为存在目标和为 22 的根节点到叶子节点的路径 5->4->11->2。

.. raw:: html

   </p>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

树

.. raw:: html

   </li>

.. raw:: html

   <li>

深度优先搜索

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
        bool hasPathSum(TreeNode* root, int sum) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
