[0888] 公平的糖果交换
=====================

-  https://leetcode-cn.com/problems/fair-candy-swap

题目描述
--------

.. raw:: html

   <p>

爱丽丝和鲍勃有不同大小的糖果棒：A[i] 是爱丽丝拥有的第 i 块糖的大小，B[j]
是鲍勃拥有的第 j 块糖的大小。

.. raw:: html

   </p>

.. raw:: html

   <p>

因为他们是朋友，所以他们想交换一个糖果棒，这样交换后，他们都有相同的糖果总量。（一个人拥有的糖果总量是他们拥有的糖果棒大小的总和。）

.. raw:: html

   </p>

.. raw:: html

   <p>

返回一个整数数组 ans，其中 ans[0]
是爱丽丝必须交换的糖果棒的大小，ans[1] 是 Bob 必须交换的糖果棒的大小。

.. raw:: html

   </p>

.. raw:: html

   <p>

如果有多个答案，你可以返回其中任何一个。保证答案存在。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>A = [1,1], B = [2,2]
   <strong>输出：</strong>[1,2]
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>A = [1,2], B = [2,3]
   <strong>输出：</strong>[1,2]
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>A = [2], B = [1,3]
   <strong>输出：</strong>[2,3]
   </pre>

.. raw:: html

   <p>

示例 4：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>A = [1,2,5], B = [2,4]
   <strong>输出：</strong>[5,4]
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>1 &lt;= A.length &lt;= 10000</code></li>
    <li><code>1 &lt;= B.length &lt;= 10000</code></li>
    <li><code>1 &lt;= A[i] &lt;= 100000</code></li>
    <li><code>1 &lt;= B[i] &lt;= 100000</code></li>
    <li>保证爱丽丝与鲍勃的糖果总量不同。</li>
    <li>答案肯定存在。</li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

数组

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        vector<int> fairCandySwap(vector<int>& A, vector<int>& B) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
