[1231] 分享巧克力
=================

-  https://leetcode-cn.com/problems/divide-chocolate

题目描述
--------

.. raw:: html

   <p>

你有一大块巧克力，它由一些甜度不完全相同的小块组成。我们用数组 sweetness 来表示每一小块的甜度。

.. raw:: html

   </p>

.. raw:: html

   <p>

你打算和 K 名朋友一起分享这块巧克力，所以你需要将切割 K 次才能得到
K+1 块，每一块都由一些 连续 的小块组成。

.. raw:: html

   </p>

.. raw:: html

   <p>

为了表现出你的慷慨，你将会吃掉 总甜度最小
的一块，并将其余几块分给你的朋友们。

.. raw:: html

   </p>

.. raw:: html

   <p>

请找出一个最佳的切割策略，使得你所分得的巧克力 总甜度最大，并返回这个
最大总甜度。

.. raw:: html

   </p>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

示例 1：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>sweetness = [1,2,3,4,5,6,7,8,9], K = 5
   <strong>输出：</strong>6
   <strong>解释：</strong>你可以把巧克力分成 [1,2,3], [4,5], [6], [7], [8], [9]。
   </pre>

.. raw:: html

   <p>

示例 2：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>sweetness = [5,6,7,8,9,1,2,3,4], K = 8
   <strong>输出：</strong>1
   <strong>解释：</strong>只有一种办法可以把巧克力分成 9 块。
   </pre>

.. raw:: html

   <p>

示例 3：

.. raw:: html

   </p>

.. raw:: html

   <pre><strong>输入：</strong>sweetness = [1,2,2,1,2,2,1,2,2], K = 2
   <strong>输出：</strong>5
   <strong>解释：</strong>你可以把巧克力分成 [1,2,2], [1,2,2], [1,2,2]。
   </pre>

.. raw:: html

   <p>

 

.. raw:: html

   </p>

.. raw:: html

   <p>

提示：

.. raw:: html

   </p>

.. raw:: html

   <ul>

::

    <li><code>0 &lt;= K &lt;&nbsp;sweetness.length &lt;= 10^4</code></li>
    <li><code>1 &lt;= sweetness[i] &lt;= 10^5</code></li>

.. raw:: html

   </ul>

.. raw:: html

   <div>

.. raw:: html

   <div>

Related Topics

.. raw:: html

   </div>

.. raw:: html

   <div>

.. raw:: html

   <li>

贪心算法

.. raw:: html

   </li>

.. raw:: html

   <li>

二分查找

.. raw:: html

   </li>

.. raw:: html

   </div>

.. raw:: html

   </div>

题目代码
--------

.. code:: cpp

    class Solution {
    public:
        int maximizeSweetness(vector<int>& sweetness, int K) {

        }
    };

题目解析
--------

方法一
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //

方法二
~~~~~~

分析
^^^^

思路
^^^^

注意
^^^^

知识点
^^^^^^

复杂度
^^^^^^

参考
^^^^

答案
^^^^

.. code:: cpp

    //
